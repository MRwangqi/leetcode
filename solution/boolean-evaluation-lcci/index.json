{
	"titleSlug": "boolean-evaluation-lcci",
	"slug": "qu-jian-dp-by-serene-mcnulty9uv-2xmy",
	"url": "https://leetcode-cn.com/problems/boolean-evaluation-lcci/solution/qu-jian-dp-by-serene-mcnulty9uv-2xmy/",
	"content": "### 解题思路\n此处撰写解题思路\n\n### 代码\n\n```typescript\nfunction countEval(s: string, result: number): number {\n    // dp[i][j][result]代表i到j个数字计算结果为result的方案数\n    // dp[i][j][0]代表计算结果为0\n    // dp[i][j][1]代表计算结果为1\n    // if(s[k]==\"&\")\n    // dp[i][j][0] = dp[i][k-1][0]*dp[k+1][j][0]+\n    // dp[i][k-1][0]*dp[k+1][j][1]+dp[i][k-1][1]*dp[k+1][j][0]\n    // dp[i][j][1] = dp[i][k-1][1]*dp[k+1][j][1]\n    // if(s[k]==\"|\")\n    // dp[i][j][0] = dp[i][k-1][0]*dp[k+1][j][0]\n    // dp[i][j][1] = dp[i][k-1][1]*dp[k+1][j][0]+dp[i][k-1][0]*dp[k+1][j][1]+dp[i][k-1][1]*dp[k+1][j][1]\n    // if(s[k] == \"^\")\n    // dp[i][j][0] = dp[i][k-1][0]*dp[k+1][j][0]+dp[i][k-1][1]*dp[k+1][j][1]\n    // dp[i][j][0] = dp[i][k-1][0]*dp[k+1][j][1]+dp[i][k-1][1]*dp[k+1][j][0]\n    let n = s.length;\n    let dp: number[][][] = new Array(n)\n        .fill(0)\n        .map((val) => new Array(n).fill(0).map((val) => new Array(2).fill(0)));\n    for (let i = 0; i < n; i++) {\n        dp[i][i][0] = s[i] == \"0\" ? 1 : 0;\n        dp[i][i][1] = s[i] == \"1\" ? 1 : 0;\n    }\n    for (let i = n - 1; i >= 0; i--) {\n        for (let j = i + 2; j < n; j++) {\n            for (let k = i + 1; k < j; k++) {\n                if (s[k] == \"&\") {\n                    dp[i][j][0] +=\n                        dp[i][k - 1][0] * dp[k + 1][j][0] +\n                        dp[i][k - 1][0] * dp[k + 1][j][1] +\n                        dp[i][k - 1][1] * dp[k + 1][j][0];\n                    dp[i][j][1] += dp[i][k - 1][1] * dp[k + 1][j][1];\n                }\n                if (s[k] == \"|\") {\n                    dp[i][j][0] += dp[i][k - 1][0] * dp[k + 1][j][0];\n                    dp[i][j][1] +=\n                        dp[i][k - 1][1] * dp[k + 1][j][0] +\n                        dp[i][k - 1][0] * dp[k + 1][j][1] +\n                        dp[i][k - 1][1] * dp[k + 1][j][1];\n                }\n                if (s[k] == \"^\") {\n                    dp[i][j][0] +=\n                        dp[i][k - 1][0] * dp[k + 1][j][0] +\n                        dp[i][k - 1][1] * dp[k + 1][j][1];\n                    dp[i][j][1] +=\n                        dp[i][k - 1][0] * dp[k + 1][j][1] +\n                        dp[i][k - 1][1] * dp[k + 1][j][0];\n                }\n            }\n        }\n    }\n    return dp[0][n - 1][result];\n}\n```"
}