{
	"titleSlug": "goal-parser-interpretation",
	"slug": "she-ji-goal-by-mercurio-z-oorv",
	"url": "https://leetcode-cn.com/problems/goal-parser-interpretation/solution/she-ji-goal-by-mercurio-z-oorv/",
	"content": "## 解题思路一：模拟\r\n\r\n①现将字符串`command`的字符存到队列中。\r\n\r\n```java\r\nfor (int i = 0; i < command.length(); i++) {\r\n            queue.add(command.charAt(i));\r\n        }\r\n```\r\n\r\n②然后遍历队列里面的字符：\r\n\r\n如果队列输出为‘G’，就在StringBuilder里面添加‘G’。\r\n\r\n如果队列输出为‘（’，就继续检查队列下一个元素。\r\n\r\n如果为‘）’，就在StringBuilder里面添加‘o’。\r\n\r\n如果为‘a’，就在StringBuilder里面添加“al”。\r\n\r\n省略了一些细节。具体如下：\r\n\r\n```java\r\nwhile (!queue.isEmpty()) {\r\n            if (queue.peek().equals('G')) {\r\n                res.append(queue.poll());\r\n            }else if (queue.peek().equals('(')) {\r\n                queue.remove();\r\n                if (queue.peek().equals(')')) {\r\n                    queue.remove();\r\n                    res.append('o');\r\n                }\r\n                else if (queue.peek().equals('a')){\r\n                    queue.remove();\r\n                    queue.remove();\r\n                    queue.remove();\r\n                    res.append(\"al\");\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n### 完整源码：\r\n\r\n```java\r\nclass Solution {\r\n    public String interpret(String command) {\r\n        Queue queue = new LinkedList();\r\n        StringBuilder res = new StringBuilder();\r\n        //将command中的字符入队\r\n        for (int i = 0; i < command.length(); i++) {\r\n            queue.add(command.charAt(i));\r\n        }\r\n        while (!queue.isEmpty()) {\r\n            if (queue.peek().equals('G')) {\r\n                res.append(queue.poll());\r\n            }else if (queue.peek().equals('(')) {\r\n                queue.remove();\r\n                if (queue.peek().equals(')')) {\r\n                    queue.remove();\r\n                    res.append('o');\r\n                }\r\n                else if (queue.peek().equals('a')){\r\n                    queue.remove();\r\n                    queue.remove();\r\n                    queue.remove();\r\n                    res.append(\"al\");\r\n                }\r\n            }\r\n        }\r\n        return res.toString();\r\n    }\r\n}\r\n```\r\n\r\n## 优化：减掉队列的使用\r\n\r\n直接遍历`command`字符串。\r\n\r\n```java\r\nfor (int i = 0; i < command.length(); i++) {\r\n            if (command.charAt(i) == 'G')\r\n                res.append('G');\r\n            else if (command.charAt(i) == '(' && command.charAt(i+1) == ')') {\r\n                res.append('o');\r\n                i++;\r\n            }\r\n            else {\r\n                res.append(\"al\");\r\n                i += 3;\r\n            }\r\n        }\r\n```\r\n\r\n### 完整源码：\r\n\r\n```java\r\nclass Solution {\r\n    public String interpret(String command) {\r\n        StringBuilder res = new StringBuilder();\r\n        for (int i = 0; i < command.length(); i++) {\r\n            if (command.charAt(i) == 'G')\r\n                res.append('G');\r\n            else if (command.charAt(i) == '(' && command.charAt(i+1) == ')') {\r\n                res.append('o');\r\n                i++;\r\n            }\r\n            else {\r\n                res.append(\"al\");\r\n                i += 3;\r\n            }\r\n        }\r\n        return res.toString();\r\n    }\r\n}\r\n```"
}