{
	"titleSlug": "shifting-letters-ii",
	"slug": "by-endlesscheng-z0ad",
	"url": "https://leetcode-cn.com/problems/shifting-letters-ii/solution/by-endlesscheng-z0ad/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV1Kd4y1Z7Fv) 已出炉，欢迎点赞三连，在评论区分享你对这场双周赛的看法~\r\n\r\n---\r\n\r\n用差分数组 $\\textit{diff}$ 表示一段区间上的更新，即在 $\\textit{start}_i$ 变化量增加了 $x$，在 $\\textit{end}_i+1$ 变化量减少了 $x$（类比导数的概念）。\r\n\r\n这里 $x=2\\cdot\\textit{direction}_i-1$，把 $0$ 和 $1$ 变成 $-1$ 和 $1$。\r\n\r\n然后从小到大遍历 $\\textit{diff}$，累加变化量为 $\\textit{shift}$（类比积分的概念），这样对于第 $i$ 个字符，其移位值就是 $\\textit{shift}$。\r\n\r\n#### 复杂度分析\r\n\r\n- 时间复杂度：$O(n)$，其中 $n$ 为 $s$ 的长度。\r\n- 空间复杂度：$O(n)$。\r\n\r\n```py [sol1-Python3]\r\nc2i = {c: i for i, c in enumerate(ascii_lowercase)}\r\n\r\nclass Solution:\r\n    def shiftingLetters(self, s: str, shifts: List[List[int]]) -> str:\r\n        diff = [0] * (len(s) + 1)\r\n        for start, end, dir in shifts:\r\n            diff[start] += dir * 2 - 1\r\n            diff[end + 1] -= dir * 2 - 1\r\n        return ''.join(ascii_lowercase[(c2i[c] + shift) % 26] for c, shift in zip(s, accumulate(diff)))\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc shiftingLetters(s string, shifts [][]int) string {\r\n\tdiff := make([]int, len(s)+1)\r\n\tfor _, p := range shifts {\r\n\t\tx := p[2]*2 - 1 // 0 和 1 变成 -1 和 1\r\n\t\tdiff[p[0]] += x\r\n\t\tdiff[p[1]+1] -= x\r\n\t}\r\n\tt, shift := []byte(s), 0\r\n\tfor i, c := range t {\r\n\t\tshift = (shift+diff[i])%26 + 26 // 防一手负数\r\n\t\tt[i] = (c-'a'+byte(shift))%26 + 'a'\r\n\t}\r\n\treturn string(t)\r\n}\r\n```\r\n\r\n#### 相似题目\r\n\r\n- [1094. 拼车](https://leetcode.cn/problems/car-pooling/)\r\n- [1109. 航班预订统计](https://leetcode.cn/problems/corporate-flight-bookings/)"
}