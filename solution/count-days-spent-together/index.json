{
	"titleSlug": "count-days-spent-together",
	"slug": "by-endlesscheng-3r0d",
	"url": "https://leetcode-cn.com/problems/count-days-spent-together/solution/by-endlesscheng-3r0d/",
	"content": "[视频讲解](https://www.bilibili.com/video/BV1MT411u7fW) 已出炉，欢迎点赞三连，在评论区分享你对这场双周赛的看法~\r\n\r\n---\r\n\r\n题目本质上是求两个区间的交集区间。\r\n\r\n交集区间的右端点等于两个区间右端点的最小值，左端点等于两个区间左端点的最大值。\r\n\r\n注意交集区间为空的情况。\r\n\r\n```py [sol1-Python3]\r\nDAYS_SUM = list(accumulate((31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31), initial=0))\r\n\r\ndef calc_days(date: str) -> int:\r\n    return DAYS_SUM[int(date[:2]) - 1] + int(date[3:])\r\n\r\nclass Solution:\r\n    def countDaysTogether(self, arriveAlice: str, leaveAlice: str, arriveBob: str, leaveBob: str) -> int:\r\n        return max(calc_days(min(leaveAlice, leaveBob)) - calc_days(max(arriveAlice, arriveBob)) + 1, 0)\r\n```\r\n\r\n```go [sol1-Go]\r\nvar days = []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\r\n\r\nfunc calcDays(s string) (day int) {\r\n\tfor _, d := range days[:s[0]&15*10+s[1]&15-1] {\r\n\t\tday += d\r\n\t}\r\n\treturn day + int(s[3]&15*10+s[4]&15)\r\n}\r\n\r\nfunc countDaysTogether(arriveAlice, leaveAlice, arriveBob, leaveBob string) int {\r\n\tans := calcDays(min(leaveAlice, leaveBob)) - calcDays(max(arriveAlice, arriveBob)) + 1\r\n\tif ans < 0 {\r\n\t\tans = 0\r\n\t}\r\n\treturn ans\r\n}\r\n\r\nfunc min(a, b string) string { if b < a { return b }; return a }\r\nfunc max(a, b string) string { if b > a { return b }; return a }\r\n```\r\n\r\nAPI 做法：\r\n\r\n```py [sol2-Python3]\r\ndef calc_dt(date: str) -> datetime.datetime:\r\n    return datetime.datetime.strptime(date, '%m-%d')  # 默认是 1900 年（平年）\r\n\r\nclass Solution:\r\n    def countDaysTogether(self, arriveAlice: str, leaveAlice: str, arriveBob: str, leaveBob: str) -> int:\r\n        return max((calc_dt(min(leaveAlice, leaveBob)) - calc_dt(max(arriveAlice, arriveBob))).days + 1, 0)\r\n```\r\n"
}