{
	"titleSlug": "tic-tac-toe-lcci",
	"slug": "qiu-he-de-si-xiang-java-ban-jia-zhu-shi-by-noscall",
	"url": "https://leetcode-cn.com/problems/tic-tac-toe-lcci/solution/qiu-he-de-si-xiang-java-ban-jia-zhu-shi-by-noscall/",
	"content": "// 别人的想法，我加个注释，希望大家看得清楚一点\r\n\r\n```\r\nclass Solution {\r\n    public String tictactoe(String[] board) {\r\n\r\n        int length = board.length;\r\n        int heng = 0; //横的和\r\n        int zong = 0; //纵的和\r\n        int left = 0; //左斜线\r\n        int right = 0; //右斜线\r\n        boolean flag = false; //记录有没有空格\r\n\r\n        for (int i = 0; i < length; i++) {\r\n\r\n            heng = 0; zong = 0;\r\n\r\n            for (int j = 0; j < length; j++) {\r\n\r\n                heng = heng +  (int) board[i].charAt(j);\r\n                zong = zong + (int) board[j].charAt(i);\r\n\r\n                if(board[i].charAt(j) == ' ') flag = true;\r\n\r\n            }\r\n\r\n            //横纵检查\r\n            if (heng == (int)'X' * length || zong == (int)'X' * length) return \"X\";\r\n            if (heng == (int)'O' * length || zong == (int)'O' * length) return \"O\";\r\n\r\n            //两条斜线上的相加\r\n            left = left + (int)board[i].charAt(i);\r\n            right = right + (int)board[i].charAt(length - i - 1);\r\n\r\n        }\r\n\r\n        //两条斜线检查\r\n        if (left == (int)'X' * length || right == (int)'X' * length) return \"X\";\r\n        if (left == (int)'O' * length || right == (int)'O' * length) return \"O\";\r\n\r\n        if (flag) return \"Pending\";\r\n        return \"Draw\";\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n```\r\n"
}