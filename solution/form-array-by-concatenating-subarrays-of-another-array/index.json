{
	"titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
	"slug": "1764-tong-guo-lian-jie-ling-yi-ge-shu-zu-iwy5",
	"url": "https://leetcode-cn.com/problems/form-array-by-concatenating-subarrays-of-another-array/solution/1764-tong-guo-lian-jie-ling-yi-ge-shu-zu-iwy5/",
	"content": "### 解题思路\n\n滑动窗口\n\n每个group一个窗口。窗口头、尾、和具备条件则挨个检查。\n\n一个窗口一个窗口找。\n\n\n### 代码\n\n```java\nclass Solution {\n\tpublic boolean canChoose(int[][] groups, int[] nums) {\n\t\tint n = groups.length, size = nums.length;\n\t\tint g = 0, p = -1;\n\t\twhile (g < n && p < size) {\n\t\t\tint[] group = groups[g];\n\t\t\tint len = group.length, sum = 0;\n\t\t\tfor (int j = 0; j < len; j++) {\n\t\t\t\tsum += group[j];\n\t\t\t}\n\t\t\tp = find(nums, p + 1, group[0], group[len - 1], len, sum, group);\n\t\t\tg++;\n\t\t}\n\t\treturn p < size;\n\t}\n\n\tprivate int find(int[] nums, int start, int first, int last, int len, int total, int[] group) {\n\t\tint sum = 0;\n\t\tfor (int i = start, l = start; i < nums.length; i++) {\n\t\t\tint cur = nums[i];\n\t\t\tsum += cur;\n\t\t\tif (l + len - 1 == i) {\n\t\t\t\tif (nums[l] == first && cur == last && sum == total) {\n\t\t\t\t\tif (this.same(nums, l, len, group)) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsum -= nums[l++];\n\t\t\t}\n\n\t\t}\n\t\treturn nums.length;\n\t}\n\n\tprivate boolean same(int[] nums, int start, int len, int[] group) {\n\t\tfor (int i = start, j = 0; i < start + len; i++, j++) {\n\t\t\tif (nums[i] != group[j]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n```"
}