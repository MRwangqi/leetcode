{
	"titleSlug": "swap-nodes-in-pairs",
	"slug": "hua-jie-suan-fa-24-liang-liang-jiao-huan-lian-biao",
	"url": "https://leetcode-cn.com/problems/swap-nodes-in-pairs/solution/hua-jie-suan-fa-24-liang-liang-jiao-huan-lian-biao/",
	"content": "### 解题思路\n\n- 标签：链表\n- 本题的递归和非递归解法其实原理类似，都是更新每两个点的链表形态完成整个链表的调整\n- 其中递归解法可以作为典型的递归解决思路进行讲解\n\n递归写法要观察本级递归的解决过程，形成抽象模型，因为递归本质就是不断重复相同的事情。而不是去思考完整的调用栈，一级又一级，无从下手。如图所示，我们应该关注一级调用小单元的情况，也就是单个f(x)。\n\n![fr&lt;x&gt;ame_00007.png](https://pic.leetcode-cn.com/7f3e3c4455b539727f5d91af437d8b136e19de53290f78225b6ab531afe2ddb8-file_1559528004922){:width=\"300px\"}\n{:align=\"center\"}\n\n\n其中我们应该关心的主要有三点：\n\n1. 返回值\n2. 调用单元做了什么\n3. 终止条件\n\n在本题中：\n\n1. 返回值：交换完成的子链表\n2. 调用单元：设需要交换的两个点为 head 和 next，head 连接后面交换完成的子链表，next 连接 head，完成交换\n3. 终止条件：head 为空指针或者 next 为空指针，也就是当前无节点或者只有一个节点，无法进行交换\n\n\n### 代码\n\n递归解法\n\n```java\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        if(head == null || head.next == null){\n            return head;\n        }\n        ListNode next = head.next;\n        head.next = swapPairs(next.next);\n        next.next = head;\n        return next;\n    }\n}\n```\n\n非递归解法\n\n```java\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        ListNode pre = new ListNode(0);\n        pre.next = head;\n        ListNode temp = pre;\n        while(temp.next != null && temp.next.next != null) {\n            ListNode start = temp.next;\n            ListNode end = temp.next.next;\n            temp.next = end;\n            start.next = end.next;\n            end.next = start;\n            temp = start;\n        }\n        return pre.next;\n    }\n}\n```\n\n### 画解\n\n<![frame_00001.png](https://pic.leetcode-cn.com/f23f29330f84b5e4b56f984986b5b765ede7f09d0b68ccc485f554b440c48f16-frame_00001.png),![frame_00002.png](https://pic.leetcode-cn.com/f32aeefa33ba8cd51d9a1e345cff30885f68681574ac22859be9f32619078d07-frame_00002.png),![frame_00003.png](https://pic.leetcode-cn.com/128ad64e800b77294cb3b31ed6b97e3b60a786207a1216fee2e41781fa950b42-frame_00003.png),![frame_00004.png](https://pic.leetcode-cn.com/3efd1a17cfe6d2f4bae900a126d77522d9190f2840d84b86875f193404def38c-frame_00004.png),![frame_00005.png](https://pic.leetcode-cn.com/b1a9bb47561c0471b2d4b63b86e1ec35d776ba322eb0b77cb78e26ee9ac8bb63-frame_00005.png),![frame_00006.png](https://pic.leetcode-cn.com/4d64391993debc8440e517ac783ca45edcea65c467ad18b1151cff84095dc96f-frame_00006.png)>\n\n想看大鹏画解更多高频面试题，欢迎阅读大鹏的 LeetBook：[《画解剑指 Offer 》](https://leetcode-cn.com/leetbook/detail/illustrate-lcof/)，O(∩_∩)O"
}