{
	"titleSlug": "minimum-non-zero-product-of-the-array-elements",
	"slug": "tan-xin-ji-qi-shu-xue-zheng-ming-by-endl-uumv",
	"url": "https://leetcode-cn.com/problems/minimum-non-zero-product-of-the-array-elements/solution/tan-xin-ji-qi-shu-xue-zheng-ming-by-endl-uumv/",
	"content": "首先，两个交换的比特必须是不同的，否则交换无影响。\r\n\r\n不失一般性，假设 $x$ 参与交换的比特为 $0$，$y$ 参与交换的比特为 $1$，交换的位置为第 $k$ 位。\r\n\r\n记 $y=y'+2^k$，则交换前，两数的乘积为\r\n\r\n$$\r\nx\\cdot y = x\\cdot (y'+2^k) = x\\cdot y'+x\\cdot 2^k\r\n$$\r\n\r\n交换后，两数的乘积为\r\n\r\n$$\r\n(x+2^k)\\cdot (y-2^k) = (x+2^k)\\cdot y' = x\\cdot y'+y'\\cdot 2^k\r\n$$\r\n\r\n对比两个等式可知，要使交换后乘积变小，需要满足\r\n\r\n$$\r\nx>y'\r\n$$\r\n\r\n这一不等式表明，对于一个数 $y$，如果我们不断地将其二进制中的 $1$ 与另一个满足该不等式的数交换，就可以将乘积不断减小。由于题目要求计算最小非零乘积，我们可以先将 $y$ 减小至 $0$，然后再寻找一个最低位为 $1$ 的数进行交换，从而让 $y$ 变成 $1$。\r\n\r\n由于 $\\textit{nums}$ 包含了 $[1, 2^p - 1]$ 内的所有整数，我们可以将其分为两组，小于 $2^{p-1}$ 的为一组，记作 $A$，其余的为另一组，记作 $B$。则 $B$ 组中除了 $2^p-1$ 之外，其余的数均可以和 $A$ 组中的数一一配对，要求配对的两个数之和为 $2^p-1$。对于配对的这两个数，若某个数的一个位置是 $1$，则另一个数的该位置上必然是 $0$，因此就可以按照上述交换流程交换，交换后的结果为 $1$ 和 $2^p-2$。\r\n\r\n交换后，每一对的乘积为 $2^p-2$，这一共有 $2^{p-1}-1$ 对，再算上不参与配对的 $2^p-1$，得到最小乘积为\r\n\r\n$$\r\n(2^p-1)\\cdot (2^p-2)^{2^{p-1}-1}\r\n$$\r\n\r\n由于幂次很大，计算时需要用到快速幂。不了解的读者可以参考 [50. Pow(x, n)](https://leetcode-cn.com/problems/powx-n/)。\r\n\r\n```go\r\nconst mod int = 1e9 + 7\r\n\r\nfunc minNonZeroProduct(p int) int {\r\n\treturn (1<<p - 1) % mod * pow(1<<p-2, 1<<(p-1)-1) % mod\r\n}\r\n\r\nfunc pow(x, n int) int {\r\n\tres := 1\r\n\tfor x %= mod; n > 0; n >>= 1 {\r\n\t\tres = res * x % mod // 由于 n 的二进制全是 1，所以无需判断 n 的奇偶性\r\n\t\tx = x * x % mod\r\n\t}\r\n\treturn res\r\n}\r\n```\r\n\r\n- 时间复杂度：$O(p)$\r\n- 空间复杂度：$O(1)$\r\n\r\n附 $1$：Python 一行解法\r\n\r\n```python\r\nclass Solution:\r\n    def minNonZeroProduct(self, p: int) -> int:\r\n        return (2 ** p - 1) * pow(2 ** p - 2, 2 ** (p - 1) - 1, 10 ** 9 + 7) % (10 ** 9 + 7)\r\n```\r\n\r\n附 $2$：打表解法\r\n\r\n```go\r\nvar ans = []int{0, 1, 6, 1512, 581202553, 202795991, 57405498, 316555604, 9253531, 857438053, 586669277, 647824153, 93512543, 391630296, 187678728, 431467833, 539112180, 368376380, 150112795, 484576688, 212293935, 828477683, 106294648, 618323081, 186692306, 513022074, 109245444, 821184946, 2043018, 26450314, 945196305, 138191773, 505517599, 861896614, 640964173, 112322054, 217659727, 680742062, 673217940, 945471045, 554966674, 190830260, 403329489, 305023508, 229675479, 865308368, 689473871, 161536946, 99452142, 720364340, 172386396, 198445540, 265347860, 504260931, 247773741, 65332879, 891336224, 221172799, 643213635, 926891661, 813987236}\r\n\r\nfunc minNonZeroProduct(p int) int {\r\n\treturn ans[p]\r\n}\r\n``` "
}