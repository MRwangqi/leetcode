{
	"titleSlug": "minimum-amount-of-time-to-collect-garbage",
	"slug": "by-endlesscheng-bxks",
	"url": "https://leetcode-cn.com/problems/minimum-amount-of-time-to-collect-garbage/solution/by-endlesscheng-bxks/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV1mG411V7fj) 已出炉，欢迎素质三连，在评论区分享你对这场周赛的看法~\r\n\r\n---\r\n\r\n由于「任何时刻只有一辆垃圾车处在使用状态」，所以我们可以把每种垃圾分别处理，累加耗时。\r\n\r\n注意到，答案其实可以分为两部分：\r\n\r\n- 所有垃圾的数目，即 $\\textit{garbage}$ 中所有字符串的长度之和。\r\n- 根据每一种字符在 $\\textit{garbage}$ 中最后一次出现的下标，即每辆垃圾车必须向右开到的房子的最小值，得到每辆车需要开的最短距离。\r\n\r\n遍历 $\\textit{garbage}$ 可以求出。\r\n\r\n```py [sol1-Python3]\r\nclass Solution:\r\n    def garbageCollection(self, garbage: List[str], travel: List[int]) -> int:\r\n        ans = 0\r\n        right = {}\r\n        for i, s in enumerate(garbage):\r\n            ans += len(s)\r\n            for c in s:\r\n                right[c] = i\r\n        return ans + sum(sum(travel[:r]) for r in right.values())\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc garbageCollection(garbage []string, travel []int) (ans int) {\r\n\tright := [3]int{}\r\n\tfor i, s := range garbage {\r\n\t\tans += len(s)\r\n\t\tfor j, c := range \"MPG\" {\r\n\t\t\tif strings.ContainsRune(s, c) {\r\n\t\t\t\tright[j] = i\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor _, r := range right {\r\n\t\tfor _, t := range travel[:r] {\r\n\t\t\tans += t\r\n\t\t}\r\n\t}\r\n\treturn\r\n}\r\n```\r\n\r\n#### 思考题\r\n\r\n如果垃圾种类有 $10^5$ 种（用数字编号），上述代码要如何优化呢？见 [视频讲解](https://www.bilibili.com/video/BV1mG411V7fj)。"
}