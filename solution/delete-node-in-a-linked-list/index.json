{
	"titleSlug": "delete-node-in-a-linked-list",
	"slug": "shan-chu-lian-biao-zhong-de-jie-dian-by-x656s",
	"url": "https://leetcode-cn.com/problems/delete-node-in-a-linked-list/solution/shan-chu-lian-biao-zhong-de-jie-dian-by-x656s/",
	"content": "#### 方法一：和下一个节点交换\n\n删除链表中的节点的常见的方法是定位到待删除节点的上一个节点，修改上一个节点的 $\\textit{next}$ 指针，使其指向待删除节点的下一个节点，即可完成删除操作。\n\n这道题中，传入的参数 $\\textit{node}$ 为要被删除的节点，无法定位到该节点的上一个节点。注意到要被删除的节点不是链表的末尾节点，因此 $\\textit{node}.\\textit{next}$ 不为空，可以通过对 $\\textit{node}$ 和 $\\textit{node}.\\textit{next}$ 进行操作实现删除节点。\n\n在给定节点 $\\textit{node}$ 的情况下，可以通过修改 $\\textit{node}$ 的 $\\textit{next}$ 指针的指向，删除 $\\textit{node}$ 的下一个节点。但是题目要求删除 $\\textit{node}$，为了达到删除 $\\textit{node}$ 的效果，只要在删除节点之前，将 $\\textit{node}$ 的节点值修改为 $\\textit{node}.\\textit{next}$ 的节点值即可。\n\n例如，给定链表 $4 \\rightarrow 5 \\rightarrow 1 \\rightarrow 9$，要被删除的节点是 $5$，即链表中的第 $2$ 个节点。可以通过如下两步操作实现删除节点的操作。\n\n1. 将第 $2$ 个节点的值修改为第 $3$ 个节点的值，即将节点 $5$ 的值修改为 $1$，此时链表如下：\n\n$$\n4 \\rightarrow 1 \\rightarrow 1 \\rightarrow 9\n$$\n\n2. 删除第 $3$ 个节点，此时链表如下：\n\n$$\n4 \\rightarrow 1 \\rightarrow 9\n$$\n\n达到删除节点 $5$ 的效果。\n\n```Java [sol1-Java]\nclass Solution {\n    public void deleteNode(ListNode node) {\n        node.val = node.next.val;\n        node.next = node.next.next;\n    }\n}\n```\n\n```C# [sol1-C#]\npublic class Solution {\n    public void DeleteNode(ListNode node) {\n        node.val = node.next.val;\n        node.next = node.next.next;\n    }\n}\n```\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    void deleteNode(ListNode* node) {\n        node->val = node->next->val;\n        node->next = node->next->next;\n    }\n};\n```\n\n```JavaScript [sol1-JavaScript]\nvar deleteNode = function(node) {\n    node.val = node.next.val;\n    node.next = node.next.next;\n};\n```\n\n```TypeScript [sol1-TypeScript]\nfunction deleteNode(root: ListNode | null): void {\n    root.val = root.next.val;\n    root.next = root.next.next;\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def deleteNode(self, node):\n        node.val = node.next.val\n        node.next = node.next.next\n```\n\n```go [sol1-Golang]\nfunc deleteNode(node *ListNode) {\n    node.Val = node.Next.Val\n    node.Next = node.Next.Next\n}\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。"
}