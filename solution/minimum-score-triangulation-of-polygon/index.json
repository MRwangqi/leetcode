{
	"titleSlug": "minimum-score-triangulation-of-polygon",
	"slug": "qu-jian-dong-tai-gui-hua-4ms-by-njyang-yang-yang",
	"url": "https://leetcode-cn.com/problems/minimum-score-triangulation-of-polygon/solution/qu-jian-dong-tai-gui-hua-4ms-by-njyang-yang-yang/",
	"content": "### 解题思路\r\ndp[i][j]表示从i到j序列的最低分。记底边为ij的三角形顶点为m，三角形imj将多边形分成三部分，总分即为三部分的分数和（如果m=i+1或m=j-1，则对应第一或第三部分分数为0）。\r\n那么m在什么位置分数最低呢，将m从i+1到j-1遍历，分别计算`dp[i][m]+A[i]*A[j]*A[m]+dp[m][j]`,取其中最小值即为dp[i][j]。\r\n`dp[i][j]=min(dp[i][m]+A[i]*A[j]*A[m]+dp[m][j]),for m in range [i+1,j-1]`\r\n![Inked图形_LI.jpg](https://pic.leetcode-cn.com/4995bcc09ad24872a23c0847c8e1d9993aebabc4fbdfb5ec523951736d3a405f-Inked%E5%9B%BE%E5%BD%A2_LI.jpg)\r\n\r\ndp table只用到右上半部分，初始化相邻两元素序列结果为0（两元素序列不能构成三角形）；采用自底向上、自左向右的方向计算dp table（也可以选择别的遍历顺序，只要保证从左下往右上就行了）。最终输出dp[0][n-1]。\r\n![表格.PNG](https://pic.leetcode-cn.com/7b5e87eae4bc9758884aa4bc3690f09e473ae6046ad29427b4a43e1ba135d602-%E8%A1%A8%E6%A0%BC.PNG)\r\n\r\n新手小白的介绍和代码希望大家多提意见。\r\n\r\n\r\n### 代码\r\n\r\n```cpp\r\nclass Solution {                                                                                                                                                                                               \r\npublic:\r\n    int minScoreTriangulation(vector<int>& A) {\r\n        int n = A.size();\r\n\tint **dp = new int*[n];\r\n\tfor (int i = 0; i < n; i++)  dp[i] = new int[n]();//初始化全0\r\n        \r\n        for (int i = n-3; i >= 0; i--) {\r\n            for (int j = i + 2; j < n;j++) {\r\n                for (int m = i + 1; m < j; m++) {\r\n                    if(dp[i][j]==0) \r\n                        dp[i][j]= A[i] * A[j] * A[m] + dp[i][m] + dp[m][j];\r\n                    else \r\n                        dp[i][j] = min(dp[i][j],A[i] * A[j] * A[m] + dp[i][m] + dp[m][j]);\r\n                }\r\n            }\r\n        }\r\n        return dp[0][n - 1];\r\n    }\r\n};\r\n```\r\n![1039.PNG](https://pic.leetcode-cn.com/c134adec28b56eae3092844496bd0c4a6793d046a51b10aff3ad3f16a621c37c-1039.PNG)\r\n\r\n"
}