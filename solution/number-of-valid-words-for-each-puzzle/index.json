{
	"titleSlug": "number-of-valid-words-for-each-puzzle",
	"slug": "wei-yun-suan-by-v5qyy4q65w-ywlg",
	"url": "https://leetcode-cn.com/problems/number-of-valid-words-for-each-puzzle/solution/wei-yun-suan-by-v5qyy4q65w-ywlg/",
	"content": "这题主要是描述非常绕，实际上读懂题意后无论思维难度还是代码实现难度都到不了Hard……\r\n\r\n题目的本质是求puzzles里的每一个单词puzzle，在words里能找到多少个word，使得word包含的字母集合，是puzzle包含的字母集合的一个子集，不过加了一个附加条件，就是word必须包含puzzle的首字母。注意到puzzle的长度是固定的，而且比较短，我们完全可以枚举puzzle的所有子序列，分别统计每一个子序列包含的字母集合在words里出现了多少次，这样的做法肯定是保证不重不漏的，假设words[j]能当作puzzle的谜底，那必然在puzzle里能找到一个子序列，使得这个子序列里包含的字母集合和words[j]包含的字母集合完全相同，而题目明确说了puzzle的字母不重复，所以不同的子序列对应的字母集合一定不同，枚举所有子序列不会导致重复统计。由于要求word必须包含puzzle的首字母，所以枚举puzzle的所有子序列时，puzzle[0]是子序列里必须出现的，否则一律视为无效子序列，不参与答案统计。\r\n\r\n但对每个puzzle的子序列都去遍历words时间复杂度过高，肯定是不允许的，对于每一个子序列包含的字母集合，我们需要O(1)得到这个集合在words里出现了多少次，这需要哈希表的辅助，而集合又不能作为哈希表的key，所以应该用位掩码来代替，例如acc的掩码是101，abcabdf的掩码是101111（注意不关心每个字母出现多少次，只关心是否出现），位掩码和字母集合是一一对应的，但位掩码是个整数，可以作为哈希表的key。对于words里每个word的位掩码都需要预处理并存进哈希表，而对于puzzle的所有子序列，转换成位掩码并在哈希表中找到这个位掩码在words里有多少个，统计进当前puzzle的答案即可。\r\n\r\n```\r\nclass Solution:\r\n    def findNumOfValidWords(self, words: List[str], puzzles: List[str]) -> List[int]:\r\n\r\n        table = defaultdict(int)\r\n        for word in words: # 预处理words里每个word的位掩码\r\n            cur = 0\r\n            for ch in word:\r\n                cur|=1<<(ord(ch)-97)\r\n            table[cur]+=1\r\n        \r\n        res = []\r\n        for puzzle in puzzles: \r\n            ans = 0\r\n            for mask in range(1,128,2): #二进制枚举子序列，由于子序列必须包含首字母，所以二进制位最低位不为1的就直接跳过\r\n                cur = 0\r\n                for j in range(7): #遍历当前puzzle的所有字母\r\n                    if (mask>>j)&1:  # 当前字母在当前枚举的子序列中时才会被加入到掩码里\r\n                        cur|=1<<(ord(puzzle[j])-97)\r\n                ans+=table[cur]\r\n            res.append(ans)\r\n        \r\n        return res\r\n```\r\n\r\n时间复杂度: O(nm + p * 2^q * q)，n为words中的单词数量，m为单个word的长度，p为puzzles中的单词数量，q为单个puzzle的长度，本题q固定为7。预处理需要O(nm)的时间，对每个puzzle枚举子序列需要O(2^q * q)的时间，共需要枚举p次。\r\n空间复杂度：O(n),本代码仅有的额外空间是记录words中各个word的位掩码的哈希表，不难看出最多只有n个key。"
}