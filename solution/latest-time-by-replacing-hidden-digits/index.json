{
	"titleSlug": "latest-time-by-replacing-hidden-digits",
	"slug": "ti-huan-yin-cang-shu-zi-de-dao-de-zui-wa-0s7r",
	"url": "https://leetcode-cn.com/problems/latest-time-by-replacing-hidden-digits/solution/ti-huan-yin-cang-shu-zi-de-dao-de-zui-wa-0s7r/",
	"content": "#### 方法一：贪心\n\n**思路与算法**\n\n为了得到最晚有效时间，我们可以从高位向低位枚举，在保证时间有效的情况下，使得每一位尽可能取最大值。\n\n因为本题中时间的位数较少，我们依次考虑每一位的规则即可。\n\n- 第一位：若第二位的值已经确定，且值落在区间 $[4,9]$ 中时，第一位的值最大只能为 $1$，否则最大可以为 $2$；\n- 第二位：若第一位的值已经确定，且值为 $2$ 时，第二位的值最大为 $3$，否则为 $9$；\n- 第三位：第三位的值的选取与其它位无关，最大为 $5$；\n- 第四位：第四位的值的选取与其它位无关，最大为 $9$。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    string maximumTime(string time) {\n        if (time[0] == '?') {\n            time[0] = ('4' <= time[1] && time[1] <= '9') ? '1' : '2';\n        }\n        if (time[1] == '?') {\n            time[1] = (time[0] == '2') ? '3' : '9';\n        }\n        if (time[3] == '?') {\n            time[3] = '5';\n        }\n        if (time[4] == '?') {\n            time[4] = '9';\n        }\n        return time;\n    }\n};\n```\n\n```Java [sol1-Java]\nclass Solution {\n    public String maximumTime(String time) {\n        char[] arr = time.toCharArray();\n        if (arr[0] == '?') {\n            arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n        }\n        if (arr[1] == '?') {\n            arr[1] = (arr[0] == '2') ? '3' : '9';\n        }\n        if (arr[3] == '?') {\n            arr[3] = '5';\n        }\n        if (arr[4] == '?') {\n            arr[4] = '9';\n        }\n        return new String(arr);\n    }\n}\n```\n\n```C# [sol1-C#]\npublic class Solution {\n    public string MaximumTime(string time) {\n        char[] arr = time.ToCharArray();\n        if (arr[0] == '?') {\n            arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n        }\n        if (arr[1] == '?') {\n            arr[1] = (arr[0] == '2') ? '3' : '9';\n        }\n        if (arr[3] == '?') {\n            arr[3] = '5';\n        }\n        if (arr[4] == '?') {\n            arr[4] = '9';\n        }\n        return new string(arr);\n    }\n}\n```\n\n```go [sol1-Golang]\nfunc maximumTime(time string) string {\n    t := []byte(time)\n    if t[0] == '?' {\n        if '4' <= t[1] && t[1] <= '9' {\n            t[0] = '1'\n        } else {\n            t[0] = '2'\n        }\n    }\n    if t[1] == '?' {\n        if t[0] == '2' {\n            t[1] = '3'\n        } else {\n            t[1] = '9'\n        }\n    }\n    if t[3] == '?' {\n        t[3] = '5'\n    }\n    if t[4] == '?' {\n        t[4] = '9'\n    }\n    return string(t)\n}\n```\n\n```C [sol1-C]\nchar* maximumTime(char* time) {\n    if (time[0] == '?') {\n        time[0] = ('4' <= time[1] && time[1] <= '9') ? '1' : '2';\n    }\n    if (time[1] == '?') {\n        time[1] = (time[0] == '2') ? '3' : '9';\n    }\n    if (time[3] == '?') {\n        time[3] = '5';\n    }\n    if (time[4] == '?') {\n        time[4] = '9';\n    }\n    return time;\n}\n```\n\n```JavaScript [sol1-JavaScript]\nvar maximumTime = function(time) {\n    const arr = Array.from(time);\n    if (arr[0] === '?') {\n        arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n    }\n    if (arr[1] === '?') {\n        arr[1] = (arr[0] == '2') ? '3' : '9';\n    }\n    if (arr[3] === '?') {\n        arr[3] = '5';\n    }\n    if (arr[4] === '?') {\n        arr[4] = '9';\n    }\n    return arr.join('');\n};\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。"
}