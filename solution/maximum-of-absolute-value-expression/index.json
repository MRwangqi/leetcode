{
	"titleSlug": "maximum-of-absolute-value-expression",
	"slug": "python-jie-fa-bao-li-shu-xue-by-jiayangwu",
	"url": "https://leetcode-cn.com/problems/maximum-of-absolute-value-expression/solution/python-jie-fa-bao-li-shu-xue-by-jiayangwu/",
	"content": "### 第一种思路 - 暴力解\r\n#### 分析：\r\n此题乍一看很简单，要求 `|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|`，直接上双重循环的暴力解即可，然而数据规模较大，结果超时。\r\n\r\n#### Python代码实现：\r\n\r\n```Python [-Python]\r\nclass Solution(object):\r\n    def maxAbsValExpr(self, arr1, arr2):\r\n        \"\"\"\r\n        :type arr1: List[int]\r\n        :type arr2: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        res = 0\r\n        for i in range(len(arr1)):\r\n            for j in range(len(arr2)):\r\n                res = max(res, abs(arr1[i] - arr1[j]) + abs(arr2[i] - arr2[j]) + abs(i - j))\r\n        return res\r\n```\r\n#### 复杂度分析：\r\n时间复杂度：$O(N^2)$\r\n\r\n空间复杂度：$O(1)$\r\n\r\n### 第二种思路 - 数学解\r\n\r\n#### 分析:\r\n既然暴力解不可行，那么我们就需要思考有没有更好的办法，已知要求 `|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|` 的最大值，我们可以先考虑一下子问题的求解：\r\n\r\n1. **子问题 1.** 求 `|arr1[i] - arr1[j]|` 的最大值\r\n\r\n    这就比较简单了，可以直观地看出来答案，一个数组 `arr1` 里两个元素差的绝对值的最大值，应该等于 `max(arr1) - min(arr1)`\r\n\r\n1. **子问题 2.** 求 `|arr1[i] - arr1[j]| + |i - j|` 的最大值\r\n\r\n    比上一题复杂了一点，观察并不能得出答案，因此，不妨把表达式的绝对值符号去掉，看看展开后会得到怎样的结果：\r\n    ```\r\n    abs( arr1[i] - arr1[j]) + abs(i - j) \r\n    =  arr1[i] - arr1[j] + i - j =  (arr1[i] + i) - (arr1[j] + j) # 式1\r\n    =  arr1[i] - arr1[j] - i + j =  (arr1[i] - i) - (arr1[j] - j) # 式2\r\n    = -arr1[i] + arr1[j] + i - j = -(arr1[i] - i) + (arr1[j] - j) # 式3\r\n    = -arr1[i] + arr1[j] - i + j = -(arr1[i] + i) + (arr1[j] + j) # 式4\r\n    ```\r\n\r\n    因为 `i` 和 `j` 是可以互换的，所以式 $1$ 等价于式 $4$， 式 $2$ 等价于式 $3$，因此可以得到：\r\n    ```\r\n    abs( arr1[i] - arr1[j]) + abs(i - j) \r\n    = (arr1[i] + i) - (arr1[j] + j) ------式1\r\n    = (arr1[i] - i) - (arr1[j] - j) ------式2\r\n\r\n    ```\r\n    现在不难发现， 原始表达式的值只取决于两个中间表达式：\r\n\r\n    中间表达式 `A = arr1[i] + i`\r\n\r\n    中间表达式 `B = arr1[i] - i`\r\n\r\n    所以有：\r\n\r\n    ```\r\n    max(abs( arr1[i] - arr1[j]) + abs(i - j) )\r\n    = max((arr1[i] + i) - (arr1[j] + j),\r\n          (arr1[i] - i) - (arr1[j] - j))\r\n    = max( max(A) - min(A),\r\n           max(B) - min(B))\r\n    ```\r\n\r\n    因此，不难得到子问题的求解代码如下：  \r\n    ```python [-Python]\r\n    class Solution(object):\r\n        def maxAbsValExpr(self, arr1, arr2):\r\n            \"\"\"\r\n            :type arr1: List[int]\r\n            :type arr2: List[int]\r\n            :rtype: int\r\n            \"\"\"\r\n            A = []\r\n            B = []\r\n            for i, x in enumerate(arr1):\r\n                A.append(x + i)\r\n                B.append(x - i)\r\n            return max(max(A) - min(A), max(B) - min(B))\r\n    ```\r\n\r\n现在已经知道了子问题如何求解，那么本题也可以采用相同的解法，首先把绝对值符号去掉，展开表达式：\r\n\r\n```\r\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\r\n \r\n =  (arr1[i] + arr2[i] + i) - (arr1[j] + arr2[j] + j)\r\n =  (arr1[i] + arr2[i] - i) - (arr1[j] + arr2[j] - j)\r\n =  (arr1[i] - arr2[i] + i) - (arr1[j] - arr2[j] + j)\r\n =  (arr1[i] - arr2[i] - i) - (arr1[j] - arr2[j] - j)\r\n = -(arr1[i] + arr2[i] + i) + (arr1[j] + arr2[j] + j)\r\n = -(arr1[i] + arr2[i] - i) + (arr1[j] + arr2[j] - j)\r\n = -(arr1[i] - arr2[i] + i) + (arr1[j] - arr2[j] + j)\r\n = -(arr1[i] - arr2[i] - i) + (arr1[j] - arr2[j] - j)\r\n \r\n因为存在四组两两等价的展开，所以可以优化为四个表达式：\r\nA = arr1[i] + arr2[i] + i\r\nB = arr1[i] + arr2[i] - i\r\nC = arr1[i] - arr2[i] + i\r\nD = arr1[i] - arr2[i] - i\r\n\r\nmax( |arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|)\r\n= max(max(A) - min(A),\r\n      max(B) - min(B),\r\n      max(C) - min(C),\r\n      max(D) - min(D))\r\n```\r\n#### Python代码实现:\r\n```Python [-Python]\r\nclass Solution(object):\r\n    def maxAbsValExpr(self, arr1, arr2):\r\n        \"\"\"\r\n        :type arr1: List[int]\r\n        :type arr2: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        A, B, C, D= [], [], [], []\r\n        for i in range(len(arr1)):\r\n            x, y = arr1[i], arr2[i]\r\n            A.append(x + y + i)\r\n            B.append(x + y - i)\r\n            C.append(x - y + i)\r\n            D.append(x - y - i)\r\n            \r\n        a = max(A) - min(A)\r\n        b = max(B) - min(B)\r\n        c = max(C) - min(C)\r\n        d = max(D) - min(D)        \r\n        return max(a, b, c, d)\r\n```\r\n\r\n\r\n#### 复杂度分析:\r\n\r\n时间复杂度：$O(N)$\r\n\r\n空间复杂度：$O(N)$\r\n\r\n#### 优化分析：\r\n\r\n其实，并没有必要储存所有的 ·A,B,C,D· 表达式的值，\r\n\r\n因为我们需要的仅仅是 ·A,B,C,D· 表达式的最大值和最小值，\r\n\r\n因此可以用八个变量替代四个数组，将空间优化到 $O(1)$。\r\n"
}