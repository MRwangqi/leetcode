{
	"titleSlug": "substrings-of-size-three-with-distinct-characters",
	"slug": "chang-du-wei-san-qie-ge-zi-fu-bu-tong-de-pr6h",
	"url": "https://leetcode-cn.com/problems/substrings-of-size-three-with-distinct-characters/solution/chang-du-wei-san-qie-ge-zi-fu-bu-tong-de-pr6h/",
	"content": "#### 方法一：遍历起始下标\n\n**思路与算法**\n\n我们遍历子字符串的起始下标 $i$，并检验 $i$ 开头的长度为 $3$ 的子串是否为好字符串，即是否不含有重复字符。与此同时，我们维护长度为 $3$ 好子串的个数。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    int countGoodSubstrings(string s) {\n        int res = 0;\n        int n = s.size();\n        for (int i = 0; i < n - 2; ++i){\n            if (s[i] != s[i+1] && s[i] != s[i+2] && s[i+1] != s[i+2]){\n                ++res;\n            }\n        }\n        return res;\n    }\n};\n```\n\n\n```Python [sol1-Python3]\nclass Solution:\n    def countGoodSubstrings(self, s: str) -> int:\n        res = 0\n        n = len(s)\n        for i in range(n - 2):\n            if s[i] != s[i+1] and s[i] != s[i+2] and s[i+1] != s[i+2]:\n                res += 1\n        return res\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(n)$，其中 $n$ 为 $s$ 的长度。我们遍历了一遍字符串，对于每个下标为 $i$ 且长度为 $3$ 的子字符串，判断其是不是好子字符串的时间复杂度为 $O(1)$。\n\n- 空间复杂度：$O(1)$。"
}