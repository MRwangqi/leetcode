{
	"titleSlug": "kth-node-from-end-of-list-lcci",
	"slug": "by-i3oring-newtonekp-mzvx",
	"url": "https://leetcode-cn.com/problems/kth-node-from-end-of-list-lcci/solution/by-i3oring-newtonekp-mzvx/",
	"content": "\n如果给定的k值等于链表长度 那么返回头节点。如果不相等 则进行遍历\n```cpp\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n * };\n */\nclass Solution {\npublic:\n\n\n    int length(ListNode *t)\n        {\n            int i=0;\n             while(t)\n                {\n                    t=t->next;\n                     i++;\n                }\n                return i;\n        }\n\n\n\n\n\n    int kthToLast(ListNode* head, int k) {\n                   ListNode *p;\n                       p=head;\n                      int sz=length(p);\n                     if(k==sz)\n                            p=head;\n                    else if(k!=sz&&k<sz)\n                             {\n                                 int j=0;\n                                 while(j<sz-k)\n                                     {\n                                         p=p->next;\n                                         j++;\n                                     }  \n                             }\n                      \n                            if(!p)\n                            return 0;\n                            else\n                            return p->val;\n            \n    }\n\n    \n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```"
}