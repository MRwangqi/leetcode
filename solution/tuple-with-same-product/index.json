{
	"titleSlug": "tuple-with-same-product",
	"slug": "by-dai-v3-prhk",
	"url": "https://leetcode-cn.com/problems/tuple-with-same-product/solution/by-dai-v3-prhk/",
	"content": "思路:\n1. 求出数组中的每个元素,使用哈系表存储相同乘积的次数;\n2. 将相同乘积乘以8即可\n\n-------------\n### 解法1:使用HashMap存储数组各个元素的乘积,然后将同样乘积且出现次数大于2时相加再*8得到结果\n```Java []\nclass Solution {\n    public int tupleSameProduct(int[] nums) {\n        Map<Integer,Integer> map=new HashMap<>();\n        int len=nums.length;\n        for(int i=0;i<len-1;i++){\n            for(int j=i+1;j<len;j++){\n                int key=nums[i]*nums[j];\n                if(map.containsKey(key)){\n                    map.put(key,map.getOrDefault(key,0)+1);\n                }\n                else{\n                    map.put(key,1);\n                }\n            }\n        }\n        int count=0;\n        List<Integer> arrays=new ArrayList<>(map.values());\n        \n        for(Integer i:arrays){\n            if(i>1){\n                count+=i*(i-1)/2;\n            }\n        }\n        return count*8;\n    }\n}\n```\n### 解法2:由解法1改进,直接记录相同乘积出现记录,再乘以8得到结果\n```Java []\nclass Solution {\n    public int tupleSameProduct(int[] nums) {\n        Map<Integer,Integer> map=new HashMap<>();\n        int len=nums.length;\n        int count=0;\n        for(int i=0;i<len-1;i++){\n            for(int j=i+1;j<len;j++){\n                int key=nums[i]*nums[j];\n                int val=map.getOrDefault(key,0);\n                map.put(key,val+1);\n                count+=val;\n            }\n        }\n        return count<<3;\n    }\n}\n```\n"
}