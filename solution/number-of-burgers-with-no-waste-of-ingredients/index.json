{
	"titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
	"slug": "bu-lang-fei-yuan-liao-de-yi-bao-zhi-zuo-fang-an-2",
	"url": "https://leetcode-cn.com/problems/number-of-burgers-with-no-waste-of-ingredients/solution/bu-lang-fei-yuan-liao-de-yi-bao-zhi-zuo-fang-an-2/",
	"content": "### 方法一：数学\n\n设巨无霸汉堡有 $x$ 个，皇堡有 $y$ 个，由于所有的材料都需要用完，因此我们可以得到二元一次方程组：\n\n$$\n\\begin{cases}\n4x + 2y = \\text{tomatoSlices} \\\\\nx + y = \\text{cheeseSlices}\n\\end{cases}\n$$\n\n解得：\n\n$$\n\\begin{cases}\nx = \\frac{1}{2} * \\text{tomatoSlices} - \\text{cheeseSlices} \\\\\ny = 2 * \\text{cheeseSlices} - \\frac{1}{2} * \\text{tomatoSlices}\n\\end{cases}\n$$\n\n根据题意，$x, y \\geq 0$ 且 $x, y \\in \\mathbb{N}$，因此需要满足：\n\n$$\n\\begin{cases}\n\\text{tomatoSlices} = 2k, \\quad k \\in \\mathbb{N} \\\\\n\\text{tomatoSlices} \\geq 2 * \\text{cheeseSlices} \\\\\n4 * \\text{cheeseSlices} \\geq \\text{tomatoSlices}\n\\end{cases}\n$$\n\n若不满足，则无解。\n\n```C++ [sol1]\nclass Solution {\npublic:\n    vector<int> numOfBurgers(int tomatoSlices, int cheeseSlices) {\n        if (tomatoSlices % 2 != 0 || tomatoSlices < cheeseSlices * 2 || cheeseSlices * 4 < tomatoSlices) {\n            return {};\n        }\n        return {tomatoSlices / 2 - cheeseSlices, cheeseSlices * 2 - tomatoSlices / 2};\n    }\n};\n```\n\n```Python [sol1]\nclass Solution:\n    def numOfBurgers(self, tomatoSlices: int, cheeseSlices: int) -> List[int]:\n        if tomatoSlices % 2 != 0 or tomatoSlices < cheeseSlices * 2 or cheeseSlices * 4 < tomatoSlices:\n            return []\n        return [tomatoSlices // 2 - cheeseSlices, cheeseSlices * 2 - tomatoSlices // 2]\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。"
}