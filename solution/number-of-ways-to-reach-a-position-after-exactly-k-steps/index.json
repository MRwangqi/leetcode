{
	"titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
	"slug": "by-endlesscheng-6yvy",
	"url": "https://leetcode-cn.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/solution/by-endlesscheng-6yvy/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV1Dt4y1j7qh) 已出炉，包含组合数学做法，欢迎素质三连，在评论区分享你对这场周赛的看法~\r\n\r\n---\r\n\r\n定义 $f(x, \\textit{left})$ 表示当前在 $x$，还剩 $\\textit{left}$ 步时，走到终点的方案数。\r\n\r\n枚举下一步往左或者往右，累加即为答案。\r\n\r\n注意在递归过程中如果 $|x-\\textit{endPos}| > \\textit{left}$，由于无法到达 $\\textit{endPos}$，可以直接返回 $0$，表示无效方案。\r\n\r\n```py [sol1-Python3]\r\nclass Solution:\r\n    def numberOfWays(self, startPos: int, endPos: int, k: int) -> int:\r\n        MOD = 10 ** 9 + 7\r\n        @cache\r\n        def f(x: int, left: int) -> int:\r\n            if abs(x - endPos) > left: return 0\r\n            if left == 0: return 1  # 成功到达终点，算一种方案\r\n            return (f(x - 1, left - 1) + f(x + 1, left - 1)) % MOD\r\n        return f(startPos, k)\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc numberOfWays(startPos, endPos, k int) int {\r\n\ttype pair struct{ x, y int }\r\n\tdp := map[pair]int{}\r\n\tvar f func(int, int) int\r\n\tf = func(x, left int) int {\r\n\t\tif abs(x-endPos) > left {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif left == 0 {\r\n\t\t\treturn 1 // 成功到达终点，算一种方案\r\n\t\t}\r\n\t\tp := pair{x, left}\r\n\t\tif v, ok := dp[p]; ok {\r\n\t\t\treturn v\r\n\t\t}\r\n\t\tres := (f(x-1, left-1) + f(x+1, left-1)) % (1e9 + 7)\r\n\t\tdp[p] = res\r\n\t\treturn res\r\n\t}\r\n\treturn f(startPos, k)\r\n}\r\nfunc abs(x int) int { if x < 0 { return -x }; return x }\r\n```\r\n"
}