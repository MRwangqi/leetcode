{
	"titleSlug": "operations-lcci",
	"slug": "by-asker-8-50r8",
	"url": "https://leetcode-cn.com/problems/operations-lcci/solution/by-asker-8-50r8/",
	"content": "```\r\n\r\nclass Operations {\r\n        public Operations() {\r\n\r\n        }\r\n\r\n        //减法\r\n        public int minus(int a, int b) {\r\n            int sum = a;\r\n            boolean flag = b>0;\r\n            int temp = flag ? -1 : 1;\r\n            while (b!=0) {\r\n                if ((flag && b+temp>=0) || (flag == false && b+temp<=0)) {\r\n                    b += temp;\r\n                    sum += temp;\r\n                    temp += temp;//加速指向目标值\r\n                } else {\r\n                    temp = flag ? -1 : 1;\r\n                }\r\n            }\r\n            return sum;\r\n            //   return a+(~b+1);//违规解法\r\n        }\r\n\r\n        //乘法\r\n        public int multiply(int a, int b) {\r\n            int sum = 0;\r\n            int flag;\r\n            int tempA;\r\n            int tempB;\r\n            if (a > 0) {\r\n                flag = -1;\r\n                tempA = -1;\r\n                tempB = b;\r\n            } else {\r\n                flag = 1;\r\n                tempA = 1;\r\n                tempB = minus(0, b);\r\n            }\r\n            while (a != 0) {\r\n                if ((flag < 0 && a + tempA >= 0) || (flag > 0 && a + tempA <= 0)) {\r\n                    sum += tempB;\r\n                    a += tempA;\r\n                    tempA = tempA + tempA;\r\n                    tempB = tempB + tempB;\r\n                } else {\r\n                    tempA = flag;\r\n                    tempB = flag < 0 ? b : minus(0, b);\r\n                }\r\n            }\r\n            return sum;\r\n        }\r\n\r\n        //除法\r\n        public int divide(int a, int b) {//-5 -2\r\n\r\n            int sum = 0;\r\n            int tempB;\r\n            boolean flag;\r\n            if ((a > 0 && b > 0) || (a < 0 && b < 0)) {//a-b-b-b.....\r\n                flag = true;\r\n            } else {//a+b+b+b.....\r\n                flag = false;\r\n            }\r\n            int absA = a >= 0 ? minus(0, a) : a;\r\n            int absB = b <= 0 ? minus(0, b) : b;\r\n            tempB = minus(0, absB);\r\n            int tempSum = -1;\r\n            int tempA = 0;\r\n            while (absA + absB <= tempA) {\r\n                if (absA <= tempA + tempB && Integer.MIN_VALUE - tempB <= tempA) {\r\n                    tempA += tempB;\r\n                    sum += tempSum;\r\n                    tempB += tempB;\r\n                    tempSum += tempSum;\r\n\r\n                } else {\r\n                    tempSum = -1;\r\n                    tempB = minus(0, absB);\r\n                }\r\n            }\r\n            if (!flag) {\r\n                return sum;\r\n            } else {\r\n                return minus(0, sum);\r\n            }\r\n        }\r\n    }\r\n```\r\n"
}