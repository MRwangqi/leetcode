{
	"titleSlug": "html-entity-parser",
	"slug": "by-934786601-zqcu",
	"url": "https://leetcode-cn.com/problems/html-entity-parser/solution/by-934786601-zqcu/",
	"content": "```rust\r\nimpl Solution {\r\n    pub fn entity_parser(text: String) -> String {\r\n        let tab = [\r\n            (\"&quot;\".to_string().into_bytes(), b'\"'),\r\n            (\"&apos;\".to_string().into_bytes(), b'\\''),\r\n            (\"&amp;\".to_string().into_bytes(), b'&'),\r\n            (\"&gt;\".to_string().into_bytes(), b'>'),\r\n            (\"&lt;\".to_string().into_bytes(), b'<'),\r\n            (\"&frasl;\".to_string().into_bytes(), b'/'),\r\n        ];\r\n        let text = text.into_bytes();\r\n        let mut ans = Vec::with_capacity(text.len());\r\n        let mut i = 0;\r\n        while i < text.len() {\r\n            if text[i] == b'&' {\r\n                let mut ok = false;\r\n                for t in tab.iter() {\r\n                    let len = t.0.len();\r\n                    if i + len <= text.len() {\r\n                        if text[i..i + len] == t.0 {\r\n                            ans.push(t.1);\r\n                            i += len;\r\n                            ok = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if ok {\r\n                    continue;\r\n                }\r\n                ans.push(b'&');\r\n                i += 1;\r\n            } else {\r\n                ans.push(text[i]);\r\n                i += 1;\r\n            }\r\n        }\r\n        unsafe { String::from_utf8_unchecked(ans) }\r\n    }\r\n}\r\n```\r\n"
}