{
	"titleSlug": "shan-chu-lian-biao-de-jie-dian-lcof",
	"slug": "by-1105389168-h2a5",
	"url": "https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof/solution/by-1105389168-h2a5/",
	"content": "![企业微信截图_264d2909-a648-46cd-9997-1fe1f2215b2f.png](https://pic.leetcode-cn.com/1665630803-Ryigji-%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_264d2909-a648-46cd-9997-1fe1f2215b2f.png)\n```typescript []\n// 双指针\nfunction deleteNode(head: ListNode | null, val: number): ListNode | null {\n    let dmy = new ListNode(0, head);\n    let prev = dmy;\n    let curr = head;\n\n    while (curr !== null) {\n        if (curr.val === val) {\n            prev.next = curr.next;\n            break;\n        }\n        prev = curr;\n        curr = curr.next;\n    }\n\n    return dmy.next;\n};\n```\n```typescript []\n// 虚拟头节点+迭代\nfunction deleteNode(head: ListNode | null, val: number): ListNode | null {\n    let dmy = new ListNode(0, head);\n    let curr = dmy;\n\n    while (curr && curr.next !== null) {\n        if (curr.next.val === val) {\n            curr.next = curr.next.next;\n            break;\n        }\n        curr = curr.next;\n    }\n\n    return dmy.next;\n};\n```\n```typescript []\n// 递归\nfunction deleteNode(head: ListNode | null, val: number): ListNode | null {\n    // 递归的终止条件：head 等于空的时候，直接返回 head，因为一个空的链表是没法删除的\n    if (head === null) return head;\n\n    // head 结点的值等于 val，直接返回 head 结点的下一个结点，相当于删除了当前节点\n    if (head.val === val) return head.next;\n\n    // 递归调用判断下一个节点是否等于 val\n    head.next = deleteNode(head.next, val);\n\n    return head;\n};\n```\n\n"
}