{
	"titleSlug": "rearrange-words-in-a-sentence",
	"slug": "java-1451-zhong-xin-pai-lie-ju-zi-zhong-1jp28",
	"url": "https://leetcode-cn.com/problems/rearrange-words-in-a-sentence/solution/java-1451-zhong-xin-pai-lie-ju-zi-zhong-1jp28/",
	"content": "### 解题思路\n\n大思路是桶排序\n\n各种表，排序，招呼吧。\nTo be or not to be，是一个问题。\n\n\n### 代码\n\n```java\nimport java.util.StringJoiner;\nclass Solution {\n\tpublic String arrangeWords(String text) {\n\t\ttext = (char) (text.charAt(0) - 'A' + 'a') + text.substring(1);\n\t\tString[] words = text.split(\" \");\n\t\tMap<Integer, List<String>> map = new HashMap<>();\n\t\tSet<Integer> lens = new HashSet<>();\n\t\tfor (String w : words) {\n\t\t\tint len = w.length();\n\t\t\tif (lens.add(len)) {\n\t\t\t\tmap.computeIfAbsent(len, key -> {\n\t\t\t\t\tList<String> list = new ArrayList<>();\n\t\t\t\t\tlist.add(w);\n\t\t\t\t\treturn list;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmap.computeIfPresent(len, (a, b) ->\n\t\t\t\t{\n\t\t\t\t\tb.add(w);\n\t\t\t\t\treturn b;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tList<Integer> lenList = new ArrayList<>(lens);\n\t\tCollections.sort(lenList);\n\t\tStringJoiner sj = new StringJoiner(\" \");\n\t\tfor (int i = 0; i < lenList.size(); i++) {\n\t\t\tList<String> list = map.get(lenList.get(i));\n\t\t\tfor (String word : list) {\n\t\t\t\tsj.add(word);\n\t\t\t}\n\t\t}\n\t\tString ans = sj.toString();\n\t\treturn (char) (ans.charAt(0) - 'a' + 'A') + ans.substring(1);\n\t}\n}\n```"
}