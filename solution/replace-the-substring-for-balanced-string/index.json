{
	"titleSlug": "replace-the-substring-for-balanced-string",
	"slug": "-by-wa-pian-d-ky0z",
	"url": "https://leetcode-cn.com/problems/replace-the-substring-for-balanced-string/solution/-by-wa-pian-d-ky0z/",
	"content": "### 解题思路\n\nr负责变平衡，l负责变不平衡\n两者都该说不说的落在了平衡点的后一个位置，此时差正好是包含全部缺失平衡的字符数量。\n\n（想象一下）贪：窗口内缺失平衡的变平衡。无辜入窗口的不变。\n\n### 代码\n\n```java\nclass Solution {\n\n\tchar[] d = new char[] { 'Q', 'W', 'E', 'R' };\n\tint[] hash = new int[128];\n\n\tpublic int balancedString(String s) {\n\t\tfor (int i = 0; i < d.length; i++) {\n\t\t\thash[d[i]] = i;\n\t\t}\n\t\tint[] cnts = new int[d.length];\n\t\tchar[] cs = s.toCharArray();\n\t\tint len = cs.length;\n\t\tint need = len >> 2;\n\t\tfor (int i = 0; i < cs.length; i++) {\n\t\t\tcnts[hash[cs[i]]]++;\n\t\t}\n\t\tint[] more = new int[d.length];\n\t\tint balance = 0;\n\t\tfor (int i = 0; i < more.length; i++) {\n\t\t\tmore[i] = Math.max(cnts[i] - need, 0);\n\t\t\tif (more[i] != 0) {\n\t\t\t\tbalance |= (1 << i);\n\t\t\t}\n\t\t}\n\t\tif (balance == 0) {// 本来就平衡\n\t\t\treturn 0;\n\t\t}\n\t\tint l = 0, r = 0;\n\t\tint ans = len;\n\t\tint[] win = new int[d.length];\n\t\twhile (r < len) {\n\t\t\twhile (r < len && balance != 0) {\n\t\t\t\tint index = hash[cs[r++]];\n\t\t\t\twin[index]++;\n\t\t\t\tif (more[index] != 0 && win[index] == more[index]) {\n\t\t\t\t\tbalance ^= 1 << index;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (l < r && balance == 0) {\n\t\t\t\tint index = hash[cs[l++]];\n\t\t\t\twin[index]--;\n\t\t\t\tif (more[index] != 0 && more[index] - win[index] == 1) {\n\t\t\t\t\tbalance ^= 1 << index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = Math.min(ans, r - l + 1);\n\t\t}\n\t\treturn ans;\n\t}\n\n}\n```"
}