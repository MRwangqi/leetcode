{
	"titleSlug": "rank-from-stream-lcci",
	"slug": "dong-tai-xian-duan-shu-by-marshalleeeeee-dwol",
	"url": "https://leetcode-cn.com/problems/rank-from-stream-lcci/solution/dong-tai-xian-duan-shu-by-marshalleeeeee-dwol/",
	"content": "介于树状数组在输入为负数时的问题，还是直接写一个动态线段树吧。\r\n因为只有点更新，所以不需要lazy tag。\r\n\r\n\r\n```\r\nclass StreamRank {\r\nprivate:\r\n    int cnt;\r\n    int d[50005];\r\n    int lc[50005];\r\n    int rc[50005];\r\n    \r\n    void update(int curr, int l, int r, int v) {\r\n        d[curr]++;\r\n        if (l != r) {\r\n            int m = (l + r) >> 1;\r\n            if (m >= v) {\r\n                if (!lc[curr]) lc[curr] = ++cnt;\r\n                update(lc[curr],l,m,v);\r\n            }\r\n            else {\r\n                if (!rc[curr]) rc[curr] = ++cnt;\r\n                update(rc[curr],m+1,r,v);\r\n            }\r\n        }\r\n    }\r\n\r\n    int query(int curr, int l, int r, int ql, int qr) {\r\n        if (ql <= l && r <= qr) return d[curr];\r\n        else if (r < ql || qr < l) return 0;\r\n        else {\r\n            int m = (l + r) >> 1;\r\n            int res = 0;\r\n            if (lc[curr]) res += query(lc[curr], l, m, ql, qr);\r\n            if (rc[curr]) res += query(rc[curr], m+1, r, ql, qr);\r\n            return res;\r\n        }\r\n    }\r\n\r\npublic:\r\n    StreamRank() {\r\n        cnt = 1;\r\n        memset(d,0,sizeof(d));\r\n        memset(lc,0,sizeof(lc));\r\n        memset(rc,0,sizeof(rc));\r\n    }\r\n    \r\n    void track(int x) {\r\n        update(1,INT_MIN/2,INT_MAX/2,x);\r\n    }\r\n    \r\n    int getRankOfNumber(int x) {\r\n        return query(1,INT_MIN/2,INT_MAX/2,INT_MIN/2,x);\r\n    }\r\n};\r\n\r\n/**\r\n * Your StreamRank object will be instantiated and called as such:\r\n * StreamRank* obj = new StreamRank();\r\n * obj->track(x);\r\n * int param_2 = obj->getRankOfNumber(x);\r\n */\r\n\r\n```\r\n"
}