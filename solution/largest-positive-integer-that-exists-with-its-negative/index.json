{
	"titleSlug": "largest-positive-integer-that-exists-with-its-negative",
	"slug": "by-endlesscheng-jjtb",
	"url": "https://leetcode-cn.com/problems/largest-positive-integer-that-exists-with-its-negative/solution/by-endlesscheng-jjtb/",
	"content": "[视频讲解](https://www.bilibili.com/video/BV1Ae4y1i7PM) 已出炉，欢迎点赞三连，在评论区分享你对这场周赛的看法~\r\n\r\n---\r\n\r\n用一个哈希表统计出现过的数字，一边遍历，一边看 $-\\textit{nums}[i]$ 是否在哈希表中。\r\n\r\n```py [sol1-Python3]\r\nclass Solution:\r\n    def findMaxK(self, nums: List[int]) -> int:\r\n        ans = -1\r\n        s = set()\r\n        for x in nums:\r\n            if -x in s: ans = max(ans, abs(x))\r\n            s.add(x)\r\n        return ans\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc findMaxK(nums []int) int {\r\n\tans := -1\r\n\thas := map[int]bool{}\r\n\tfor _, x := range nums {\r\n\t\tif abs(x) > ans && has[-x] {\r\n\t\t\tans = abs(x)\r\n\t\t}\r\n\t\thas[x] = true\r\n\t}\r\n\treturn ans\r\n}\r\n\r\nfunc abs(x int) int { if x < 0 { return -x }; return x }\r\n```\r\n\r\n#### 复杂度分析\r\n\r\n- 时间复杂度：$O(n)$，其中 $n$ 为 $\\textit{nums}$ 的长度。\r\n- 空间复杂度：$O(n)$。\r\n"
}