{
	"titleSlug": "filling-bookcase-shelves",
	"slug": "dong-tai-gui-hua-python3-by-smoon1989",
	"url": "https://leetcode-cn.com/problems/filling-bookcase-shelves/solution/dong-tai-gui-hua-python3-by-smoon1989/",
	"content": "### 思路：\r\n\r\n动态规划，用 `dp[i]` 表示放置前 `i` 本书所需要的书架最小高度，初始值 `dp[0] = 0`，其他为最大值 `1000*1000`。遍历每一本书，把当前这本书作为书架最后一层的最后一本书，将这本书之前的书向后调整，看看是否可以减少之前的书架高度。状态转移方程为 `dp[i] = min(dp[i] ,  dp[j - 1] + h)`，其中 `j` 表示最后一层所能容下书籍的索引，`h` 表示最后一层最大高度。\r\n\r\n### 图解：\r\n```\r\n样例输入：books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\r\n```\r\n最后求 `dp[7]`，省略了遍历步骤，直接给出结果。\r\n\r\n<![幻灯片1.PNG](https://pic.leetcode-cn.com/0ef150ac963c038c054eb5c514012bd5459ce9ee9f32965fd9db27199bc6fd72-%E5%B9%BB%E7%81%AF%E7%89%871.PNG),![幻灯片2.PNG](https://pic.leetcode-cn.com/7beeb27d3104378236ec674e04f2b6d7e19351d0377efdac34d9a3a9fa7bcfa3-%E5%B9%BB%E7%81%AF%E7%89%872.PNG),![幻灯片3.PNG](https://pic.leetcode-cn.com/a424a624616571acced8905a8781314fa4156db499975bea8b3e092989a0b3a6-%E5%B9%BB%E7%81%AF%E7%89%873.PNG),![幻灯片4.PNG](https://pic.leetcode-cn.com/5705eef7c357129fe1355b117dd6d474bf174560bff3122d34552bc144ef6f87-%E5%B9%BB%E7%81%AF%E7%89%874.PNG),![幻灯片5.PNG](https://pic.leetcode-cn.com/52e646dc24c2a0caa98d2d0d6cadc0470e94628e3b2a6931bdc78a76258a340a-%E5%B9%BB%E7%81%AF%E7%89%875.PNG),![幻灯片6.PNG](https://pic.leetcode-cn.com/1e69625083f66b509770d176960b287c2f7a48c0de0514bcce126bf3c615fb08-%E5%B9%BB%E7%81%AF%E7%89%876.PNG),![幻灯片7.PNG](https://pic.leetcode-cn.com/d7c39baad8db7e5e80cc9f32852d5d5555c210a895777e10d529e081107a465c-%E5%B9%BB%E7%81%AF%E7%89%877.PNG),![幻灯片8.PNG](https://pic.leetcode-cn.com/64312ee38f5992b1f1f52cb05f03e4938bc0208b920888d3b1a52aacd7b23153-%E5%B9%BB%E7%81%AF%E7%89%878.PNG),![幻灯片9.PNG](https://pic.leetcode-cn.com/85dd421d900c030dab39ad4773c5ff89a5b66027bcd59387621e3f2862c8b9a4-%E5%B9%BB%E7%81%AF%E7%89%879.PNG),![幻灯片10.PNG](https://pic.leetcode-cn.com/a383ab21db736fde1db457ecb18a08801f29e88e6a8dd2c5edccb696e95930cd-%E5%B9%BB%E7%81%AF%E7%89%8710.PNG),![幻灯片11.PNG](https://pic.leetcode-cn.com/b076464ad68cd8832829293dfc118451a75348267639e12084712fc979eb8602-%E5%B9%BB%E7%81%AF%E7%89%8711.PNG),![幻灯片12.PNG](https://pic.leetcode-cn.com/3dad177272c70501624fcdc21c5120e75cc6edd3aefd16b6f83aaea881c073cf-%E5%B9%BB%E7%81%AF%E7%89%8712.PNG),![幻灯片13.PNG](https://pic.leetcode-cn.com/81566156eaa0a0aeb9f66c190a6ecf5b4f22777799cd87feb08f74827c297e4f-%E5%B9%BB%E7%81%AF%E7%89%8713.PNG),![幻灯片14.PNG](https://pic.leetcode-cn.com/0f67bc4418c4c4b44050d8370d93c987a6ef35c9cc4f7846c7fbeb730c6345a9-%E5%B9%BB%E7%81%AF%E7%89%8714.PNG),![幻灯片15.PNG](https://pic.leetcode-cn.com/94dddd9147a4f2f95be306ce8f9be1fb2b67a34337b2c5bccb820aabee7719f5-%E5%B9%BB%E7%81%AF%E7%89%8715.PNG),![幻灯片16.PNG](https://pic.leetcode-cn.com/36beea4214bf7019ae4fb1454cd7f5ea515faf05bb7f6eccab5eafb60a365750-%E5%B9%BB%E7%81%AF%E7%89%8716.PNG)>\r\n\r\n### 代码：\r\n\r\n```python [-Python3]\r\nclass Solution:\r\n    def minHeightShelves(self, books: List[List[int]], shelf_width: int) -> int:\r\n        n = len(books)\r\n        dp = [1000000] * (n + 1)\r\n        dp[0] = 0\r\n        for i in range(1, n + 1):\r\n            tmp_width, j, h = 0, i, 0\r\n            while j > 0:\r\n                tmp_width += books[j - 1][0]\r\n                if tmp_width > shelf_width:\r\n                    break\r\n                h = max(h, books[j - 1][1])\r\n                dp[i] = min(dp[i], dp[j - 1] + h)\r\n                j -= 1\r\n        return dp[-1]\r\n```\r\n\r\n"
}