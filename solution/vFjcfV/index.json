{
	"titleSlug": "vFjcfV",
	"slug": "cyv-by-heshan-5-9gja",
	"url": "https://leetcode-cn.com/problems/vFjcfV/solution/cyv-by-heshan-5-9gja/",
	"content": "### 解题思路\n此处撰写解题思路\n\n### 代码\n\n```c\nint cmp(const void *a,const void *b)\n{\n    int *c=*(int **)a;\n    int *d=*(int **)b;\n    return c[0]-d[0];\n}\nint cmp2(const void *a,const void *b)\n{\n    int *c=*(int **)a;\n    int *d=*(int **)b;\n    return c[1]-d[1];\n}\nint circleGame(int** toys, int toysSize, int* toysColSize, int** circles, int circlesSize, int* circlesColSize, int r){\n    int i,j;\n    int ans=0;\n    int **p=(int **)malloc(sizeof(int *)*circlesSize);\n    for(i=0;i<circlesSize;i++)\n    {\n        p[i]=(int *)malloc(sizeof(int)*2);\n        p[i][0]=circles[i][0];\n        p[i][1]=circles[i][1];\n    }   \n    qsort(circles,circlesSize,sizeof(circles[0]),cmp);\n    qsort(p,circlesSize,sizeof(int)*2,cmp2);\n    int left,right,low,high;\n    int a,b,c,d;\n    int x,y,mid;\n    for(i=0;i<toysSize;i++)\n    {\n        if(toys[i][2]>r)\n        {\n            continue;\n        }\n        a=toys[i][0]+toys[i][2]-r;\n        b=toys[i][0]+r-toys[i][2];\n        c=toys[i][1]+toys[i][2]-r;\n        d=toys[i][1]+r-toys[i][2];\n        \n        x=0,y=circlesSize-1;\n        while(x<=y)// >=\n        {\n            mid=(x+y)/2;           \n            if(circles[mid][0]<a)\n            {\n                x=mid+1;\n            }\n            else\n            {\n                y=mid-1;\n            }\n        }\n        left=x;\n\n        x=0,y=circlesSize-1;\n        while(x<=y)// >\n        {\n            mid=(x+y)/2;           \n            if(circles[mid][0]<=b)\n            {\n                x=mid+1;\n            }\n            else\n            {\n                y=mid-1;\n            }\n        }\n        right=x;\n        x=0,y=circlesSize-1;\n        while(x<=y)// >=\n        {\n            mid=(x+y)/2;           \n            if(p[mid][1]<c)\n            {\n                x=mid+1;\n            }\n            else\n            {\n                y=mid-1;\n            }\n        }\n        low=x;\n\n        x=0,y=circlesSize-1;\n        while(x<=y)// >\n        {\n            mid=(x+y)/2;           \n            if(p[mid][1]<=d)\n            {\n                x=mid+1;\n            }\n            else\n            {\n                y=mid-1;\n            }\n        }\n        high=x;\n        int **pp=circles;\n        if(high-low<right-left)\n        {\n            left=low;\n            right=high;\n            pp=p;\n        }   \n        long long len=(r-toys[i][2])*(r-toys[i][2]);\n        for(j=left;j<right;j++)\n        {\n            long long tmp=1LL*(pp[j][1]-toys[i][1])*(pp[j][1]-toys[i][1])+(pp[j][0]-toys[i][0])*(pp[j][0]-toys[i][0]);\n            if(tmp<=len)\n            {\n                ans++;\n                break;\n            }\n        }\n            \n    }\n    return ans;\n}\n```"
}