{
	"titleSlug": "dice-roll-simulation",
	"slug": "by-jin-hei-zdf0",
	"url": "https://leetcode-cn.com/problems/dice-roll-simulation/solution/by-jin-hei-zdf0/",
	"content": "dp[i][j][1] = sum dp[i-1][x!==j][k]\r\n\r\nk >= 2时:\r\ndp[i][j][k] = dp[i-1][j][k-1]\r\n```\r\nvar dieSimulator = function(n, rollMax) {\r\n    const mod = 1e9 + 7;\r\n    const maxFreq = Math.max(...rollMax);\r\n    const dp = new Array(n + 1).fill(0).map(() => new Array(7).fill(0).map(() => new Array(maxFreq + 1).fill(0)));\r\n    let res = 0;\r\n    // 第一轮\r\n    for (let j = 1; j <= 6; j++) {\r\n        dp[1][j][1] = 1;\r\n    }\r\n    for (let i = 2; i <= n; i++) {\r\n        for (let j = 1; j <= 6; j++) {\r\n            for (let k = 2; k <= rollMax[j-1]; k++) {\r\n                dp[i][j][k] = dp[i-1][j][k-1];\r\n            }\r\n            let tmp = 0;\r\n            for (let pre = 1; pre <= 6; pre++) {\r\n                if (pre !== j) {\r\n                    for (let k = 1; k <= rollMax[pre - 1]; k++) {\r\n                        tmp += dp[i-1][pre][k] % mod;\r\n                    }\r\n                }\r\n            }\r\n            dp[i][j][1] = tmp % mod;\r\n        } \r\n    }\r\n    for (let j = 1; j <= 6; j++) {\r\n        for (let k = 1; k <= rollMax[j-1]; k++) {\r\n            res = (res + dp[n][j][k]) % mod;\r\n        }\r\n    }\r\n    return res;\r\n};\r\n```\r\n"
}