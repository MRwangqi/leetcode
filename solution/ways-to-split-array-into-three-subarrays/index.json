{
	"titleSlug": "ways-to-split-array-into-three-subarrays",
	"slug": "by-wxlin-r-a6kb",
	"url": "https://leetcode-cn.com/problems/ways-to-split-array-into-three-subarrays/solution/by-wxlin-r-a6kb/",
	"content": "### 解题思路\n还请大佬们指正\n### 代码\n```cpp\nclass Solution {\npublic:\n    const int mod = 1e9 + 7;\n    int waysToSplit(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> presum(n+1);\n        presum[0] = 0;\n        //求前缀和\n        for(int i = 0; i < n; ++i) {\n            presum[i+1] = presum[i] + nums[i];\n        }\n        int ans = 0;\n        //k表示right的右边的下标，i表示left左边下标，j表示满足条件的mid左下标，k是mid的右下标\n        int j = 2, k = 2, sum = presum[n];\n\n        for(int i = 1; i <= n - 2; ++i) {\n            int left = presum[i];\n            //当left大于全部和的三分之一的时候，一定不成立\n            if(left * 3 > sum) {\n                break;\n            }\n            //全0的情况：j不会自动移动\n            j = max(i + 1, j);\n            //求出下标j\n            while(j < n && presum[j] - presum[i] < left) {\n                j++;\n            }\n\n            //更新k，然后找到下标k\n            k = max(j, k);\n            while(k < n) {\n                int mid = presum[k] - presum[i], right = sum - presum[k];\n                if(right < mid) {\n                    break;\n                }\n                k++;\n            }\n            ans += k - j;\n            ans %= mod;\n        }\n        return ans;\n    }\n};\n```"
}