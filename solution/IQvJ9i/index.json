{
	"titleSlug": "IQvJ9i",
	"slug": "by-freeyourmind-9dnl",
	"url": "https://leetcode-cn.com/problems/IQvJ9i/solution/by-freeyourmind-9dnl/",
	"content": "完成此题需要两个观察：\r\n1. 怎样简单地从一个状态到下一个状态\r\n2. 每次照光时，怎样快速找到下一个开孔的状态\r\n\r\n对于1：\r\n方向是1时，id和nid关于m+n对称。方向是-1时整体挪动n，计算后再挪回来。\r\n\r\n对于2：\r\n首先要预处理每个状态转移的组，每组的状态是循环的，预处理时记录出现的先后顺序作为组内序号。让后每次开孔时，把组内序号放入这个组的有序表中。就能快速查找下一个孔是谁了。\r\n\r\n![QQ截图20220406200624.png](https://pic.leetcode-cn.com/1649248452-BCteIu-QQ%E6%88%AA%E5%9B%BE20220406200624.png)\r\n\r\nP.S.\r\n用insort直接在list上操作，对于这个题的数据貌似更快，难怪有人说n^2的算法也能过~。严谨起见，还是用SortedList吧。\r\n\r\n```python []\r\nfrom sortedcontainers import SortedList\r\n\r\nclass BlackBox:\r\n\r\n    def __init__(self, n: int, m: int):\r\n        corners, T = {0, m, m + n, m + n + m, m + n + m + n}, m + n + m + n\r\n\r\n        def getnext(idx, dr):\r\n            if dr > 0: nid = T - idx\r\n            else: nid = (T - (idx + n) - n) % T\r\n            ndr = dr if nid in corners else -dr\r\n            return nid, ndr\r\n\r\n        seen = set()\r\n        glen, gid, node_book = [0] * (m + n + m + n), 0, dict()\r\n        for cur in product(range(m + n + m + n), (1, -1)):\r\n            if cur in seen: continue\r\n            while cur not in seen:\r\n                seen.add(cur)\r\n                node_book[cur] = (gid, glen[gid]); glen[gid] += 1\r\n                cur = getnext(*cur)\r\n            gid += 1\r\n\r\n        self.node_book, self.opened_book = node_book, [SortedList() for _ in range(gid)]\r\n\r\n    def open(self, index: int, dr: int) -> int:\r\n        for dr in (-dr, dr):\r\n            gid, oid = self.node_book[index, dr]\r\n            if (oid, index) not in self.opened_book[gid]:\r\n                self.opened_book[gid].add((oid, index))\r\n\r\n        rid = self.opened_book[gid].bisect_right((oid, index)) % len(self.opened_book[gid])\r\n        res = self.opened_book[gid][rid][1]\r\n\r\n        return res\r\n\r\n\r\n    def close(self, index: int) -> None:\r\n        for dr in (1, -1):\r\n            gid, oid = self.node_book[index, dr]\r\n            self.opened_book[gid].remove((oid, index))\r\n```\r\n"
}