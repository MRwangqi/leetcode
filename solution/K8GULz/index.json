{
	"titleSlug": "K8GULz",
	"slug": "by-jsjohnsonjs-efng",
	"url": "https://leetcode-cn.com/problems/K8GULz/solution/by-jsjohnsonjs-efng/",
	"content": "### 解题思路\n嘿嘿，我CV我***\n\n### 代码\n\n```python3\nclass Solution:\n    def ringGame(self, challenge: List[int]) -> int:\n        res = (1 << 60) - 1\n        n = len(challenge)\n        max_ = challenge.index(max(challenge))\n\n        for i in range(59, -1, -1):\n            cur = res ^ (1 << i)\n            stk = []\n            for j in range(0, n):\n                cha = challenge[(j + max_) % n]\n                flag = False\n\n                if cur >= cha:\n                    cha |= cur\n                    flag = True\n\n                while stk:\n                    if flag == True:\n                        if stk[-1][1] == True:\n                            cha |= stk[-1][0]\n                            stk.pop(-1)\n                        elif stk[-1][0] <= cha and stk[-1][1] == False:\n                            cha |= stk[-1][0]\n                            stk.pop(-1)\n                        else:\n                            break\n                    else:\n                        if stk[-1][0] >= cha and stk[-1][1] == True:\n                            cha |= stk[-1][0]\n                            stk.pop(-1)\n                            flag = True\n                        else:\n                            break\n                stk.append((cha, flag))\n            if len(stk) == 1 and stk[-1][1] == True:\n                res = cur\n        return res\n```"
}