{
	"titleSlug": "spiral-matrix-iv",
	"slug": "by-endlesscheng-4dwy",
	"url": "https://leetcode-cn.com/problems/spiral-matrix-iv/solution/by-endlesscheng-4dwy/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV1Yf4y1Z7Ac) 已出炉，欢迎点赞三连~\r\n\r\n---\r\n\r\n代码同 [59. 螺旋矩阵 II](https://leetcode.cn/problems/spiral-matrix-ii/)，改为在链表上遍历即可。\r\n\r\n```py [sol1-Python3]\r\nDIRS = ((0, 1), (1, 0), (0, -1), (-1, 0))\r\n\r\nclass Solution:\r\n    def spiralMatrix(self, m: int, n: int, head: Optional[ListNode]) -> List[List[int]]:\r\n        ans = [[-1] * n for _ in range(m)]\r\n        i = j = di = 0\r\n        while head:\r\n            ans[i][j] = head.val\r\n            head = head.next\r\n            dx, dy = DIRS[di]\r\n            if not (0 <= i + dx < m and 0 <= j + dy < n and ans[i + dx][j + dy] == -1):\r\n                di = (di + 1) % 4\r\n                dx, dy = DIRS[di]\r\n            i += dx\r\n            j += dy\r\n        return ans\r\n```\r\n\r\n```go [sol1-Go]\r\nvar dirs = []struct{ x, y int }{{0, 1}, {1, 0}, {0, -1}, {-1, 0}} // 右下左上\r\n\r\nfunc spiralMatrix(n int, m int, head *ListNode) [][]int {\r\n\tans := make([][]int, n)\r\n\tfor i := range ans {\r\n\t\tans[i] = make([]int, m)\r\n\t\tfor j := range ans[i] {\r\n\t\t\tans[i][j] = -1\r\n\t\t}\r\n\t}\r\n\tfor x, y, di := 0, 0, 0; head != nil; head = head.Next {\r\n\t\tans[x][y] = head.Val\r\n\t\td := dirs[di&3]\r\n\t\tif xx, yy := x+d.x, y+d.y; xx < 0 || xx >= n || yy < 0 || yy >= m || ans[xx][yy] != -1 {\r\n\t\t\tdi++\r\n\t\t\td = dirs[di&3]\r\n\t\t}\r\n\t\tx += d.x\r\n\t\ty += d.y\r\n\t}\r\n\treturn ans\r\n}\r\n```\r\n"
}