{
	"titleSlug": "2vYnGI",
	"slug": "lcp-18-by-leetcode-wei-ne6m",
	"url": "https://leetcode-cn.com/problems/2vYnGI/solution/lcp-18-by-leetcode-wei-ne6m/",
	"content": "```\n# Python3 排序+二分\nclass Solution:\n    def breakfastNumber(self, staple: List[int], drinks: List[int], x: int) -> int:\n        staple.sort()\n        drinks.sort()\n        res = 0\n        for i in range(len(staple)):\n            if staple[i] > x:\n                break\n            l,r = 0,len(drinks)-1\n            ref = x - staple[i]\n            while l <= r:\n                mid = (l + r ) // 2\n                if drinks[mid] <= ref:\n                    l = mid + 1\n                else:\n                    r = mid -1\n            res += l \n            res %= 1000000007\n        return res \n\n# Python3 模拟\nclass Solution:\n    def breakfastNumber(self, staple: List[int], drinks: List[int], x: int) -> int:\n        staple.sort()\n        drinks.sort()\n        res = 0\n        i,j = 0,len(drinks)-1\n        while i < len(staple) and j >= 0:\n            if staple[i] + drinks[j] > x:\n                j -= 1\n            else:\n                res += (j+1)\n                res %= 1000000007\n                i += 1\n        return res\n```\n"
}