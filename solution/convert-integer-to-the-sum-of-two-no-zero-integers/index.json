{
	"titleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers",
	"slug": "jiang-zheng-shu-zhuan-huan-wei-liang-ge-wu-ling-3",
	"url": "https://leetcode-cn.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/solution/jiang-zheng-shu-zhuan-huan-wei-liang-ge-wu-ling-3/",
	"content": "#### 方法一：枚举\n\n由于题目中给出的 `n` 的范围 `[2, 10000]` 较小，因此我们可以直接在 `[1, n)` 的范围内枚举 `A`，并通过 `n - A` 得到 `B`，再判断 `A` 和 `B` 是否均不包含 `0` 即可。\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    vector<int> getNoZeroIntegers(int n) {\n        for (int A = 1; A < n; ++A) {\n            int B = n - A;\n            if ((to_string(A) + to_string(B)).find('0') == string::npos) {\n                return {A, B};\n            }\n        }\n        return {};\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def getNoZeroIntegers(self, n: int) -> List[int]:\n        for A in range(1, n):\n            B = n - A\n            if '0' not in str(A) + str(B):\n                return [A, B]\n        return []\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(N\\log N)$，枚举 `A` 的时间复杂度为 $O(N)$，判断 `A` 和 `B` 是否均不包含 `0` 的时间复杂度为 $O(\\log N)$，即 `A` 与 `B` 的位数之和。\n\n- 空间复杂度：$O(1)$。"
}