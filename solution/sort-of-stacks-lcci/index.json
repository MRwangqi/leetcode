{
	"titleSlug": "sort-of-stacks-lcci",
	"slug": "mian-shi-ti-0305zhan-pai-xu-by-leetcode-zj4yf",
	"url": "https://leetcode-cn.com/problems/sort-of-stacks-lcci/solution/mian-shi-ti-0305zhan-pai-xu-by-leetcode-zj4yf/",
	"content": "```python3\n# Python3 辅助栈模拟\nclass SortedStack:\n\n    def __init__(self):\n        self.stack = list()\n\n\n    def push(self, val: int) -> None:\n        t = list()\n        while self.stack and self.stack[-1] < val:\n            t.append(self.stack.pop())\n        self.stack.append(val)\n        while t:\n            self.stack.append(t.pop())\n\n\n    def pop(self) -> None:\n        if not self.isEmpty():\n            self.stack.pop()\n\n\n    def peek(self) -> int:\n        if self.isEmpty():\n            return -1\n        return self.stack[-1]\n\n\n    def isEmpty(self) -> bool:\n        return len(self.stack) == 0\n\n\n\n# Python3 堆模拟\n# Your SortedStack object will be instantiated and called as such:\n# obj = SortedStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.peek()\n# param_4 = obj.isEmpty()\n\nimport heapq\nclass SortedStack:\n\n    def __init__(self):\n        self.stack = list()\n        heapq.heapify(self.stack)\n\n\n    def push(self, val: int) -> None:\n        heapq.heappush(self.stack,val)\n\n\n    def pop(self) -> None:\n        if not self.isEmpty():\n            ref = heapq.heappop(self.stack)\n            return ref\n\n    def peek(self) -> int:\n        if self.isEmpty():\n            return -1\n        ref = heapq.heappop(self.stack)\n        heapq.heappush(self.stack,ref)\n        return ref\n\n\n    def isEmpty(self) -> bool:\n        \n        return len(self.stack) == 0\n        \n        \n\n\n\n# Your SortedStack object will be instantiated and called as such:\n# obj = SortedStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.peek()\n# param_4 = obj.isEmpty()\n```\n"
}