{
	"titleSlug": "match-substring-after-replacement",
	"slug": "shu-ju-fan-wei-geng-da-de-hua-zen-yao-zu-d9es",
	"url": "https://leetcode-cn.com/problems/match-substring-after-replacement/solution/shu-ju-fan-wei-geng-da-de-hua-zen-yao-zu-d9es/",
	"content": "如果数据范围再大一点，比如 $n=10^5$ 的话，据我所知就只能用 FFT 做了。大致思路是这样的：令 $n=|s|$，$m=|sub|$。对于每种字符 $c$，定义布尔数组 $A[0,\\dots,n-1]$，其中 $A[i]=1$ 当且仅当 $s[i]=c$。再定义布尔数组 $B[0,\\dots,m-1]$，其中 $B[j]=1$ 当且仅当 $sub[j]$ 不能变成 $c$。那么对于任意满足 $A[i]=1$ 的下标 $i$，以及对于任意满足 $B[j]=1$ 的下标 $j$，$s[i]$ 不能跟转化后的 $sub[j]$ 匹配上，所以 $sub$ 串的起始位置不能为 $i-j$。然后用卷积找出所有不合法的起始位置，再对所有字符取 or。总复杂度 $O(\\sigma\\cdot n\\log n)$，其中 $\\sigma$ 为字符集大小。\r\n\r\n现在我不理解的是这题为什么被标成了 hard。注意到这场比赛反常地有两个 hard，所以官方标难度的时候应该是考虑过后的有意为之，而且也应该有一个官方算法。好奇以下哪一条出了问题，感觉除了第一条外每条猜测都很离谱：\r\n1. 我智障了，漏掉了什么简单的做法。\r\n2. 官方觉得暴力值得一个 hard。\r\n3. 官方觉得暴力过不了 $n=5000$。但不被 hard 标签误导的话大家都能看出来这显然能过。\r\n4. 官方做法是这个 FFT。但是 FFT 不应该是大家都熟知的技能。\r\n5. 官方做法是[压位](https://leetcode.cn/problems/match-substring-after-replacement/solution/mei-ju-by-oldyan-8i75/)。但是压位也应该不是大家都熟知的技能。\r\n6. 官方算法是错的 kmp。但是测试代码的时候评测后台是可以给出正确的输出的。\r\n\r\n也有可能出了不止一个问题。"
}