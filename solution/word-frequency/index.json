{
	"titleSlug": "word-frequency",
	"slug": "qie-ge-pai-xu-dan-ci-tong-ji-ci-shu-pai-8sdgt",
	"url": "https://leetcode-cn.com/problems/word-frequency/solution/qie-ge-pai-xu-dan-ci-tong-ji-ci-shu-pai-8sdgt/",
	"content": "\n综合使用的 shell 命令\n\n```shell []\ncat words.txt | tr -s ' ' '\\n' | sort | uniq -c | sort -r | awk '{ print $2, $1 }'\n```\n\n# 解题步骤\n\n## 1 切割\n\n`tr` 命令用于转换或删除文件中的字符\n-s：缩减连续重复的字符成指定的单个字符\n\n```shell []\ncat Words.txt| tr -s ' ' '\\n'\n\nthe\nday\nis\nsunny\nthe\nthe\nthe\nsunny\nis\nis\n```\n\n## 2 排序单词\n\n\n\n```shell []\ncat Words.txt| tr -s ' ' '\\n' | sort\n\nday\nis\nis\nis\nsunny\nsunny\nthe\nthe\nthe\nthe\n```\n\n## 3 统计单词出现次数\n\n`uniq` 命令用于检查及删除文本文件中重复出现的行列，一般与 sort 命令结合使用。\n-c：在每列旁边显示该行重复出现的次数。\n```shell []\ncat Words.txt| tr -s ' ' '\\n' | sort | uniq -c\n\n1 day\n3 is\n2 sunny\n4 the\n```\n\n## 4 排序单词出现次数\n-r：以相反的顺序来排序\n```shell []\ncat Words.txt| tr -s ' ' '\\n' | sort | uniq -c | sort -r\n\n4 the\n3 is\n2 sunny\n1 day\n```\n\n## 5 打印\n\n```shell []\ncat Words.txt| tr -s ' ' '\\n' | sort | uniq -c | sort -r | awk '{print $2, $1}'\n\nthe 4\nis 3\nsunny 2\nday 1\n```\n\n---\n\n\n> 2021年12月1日 更新\n\n话说，大家有没有觉得这个有点像 MapReduce 的处理流程\n\n\n![image.png](https://pic.leetcode-cn.com/1638327709-HYoHoi-image.png)\n\n| MapReduce  | 192题 |\n| :-: | :-: |\n|input | cat Words.txt |\n|split | tr -s ' ' '\\n' |\n|map & shuffle | sort |\n|reduce | uniq -c |\n|finale | awk '{print $2, $1}' |\n\nOK，那么他们为什么流程上这么像？\n\n除了高度吻合的对单词做处理外，个人觉得，这它们都用到了 `分治` 的思想来处理。\n一次处理不好的事，分而治之。"
}