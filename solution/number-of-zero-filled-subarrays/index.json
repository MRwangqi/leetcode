{
	"titleSlug": "number-of-zero-filled-subarrays",
	"slug": "by-endlesscheng-men8",
	"url": "https://leetcode-cn.com/problems/number-of-zero-filled-subarrays/solution/by-endlesscheng-men8/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV16e4y1Q73o) 已出炉，欢迎点赞三连，在评论区分享你对这场双周赛的看法~\r\n\r\n---\r\n\r\n考虑每个以 $0$ 结尾的子数组的个数。\r\n\r\n做法：统计连续 $0$ 组成的长度 $c$，每个 $c$ 可以贡献 $c$ 个子数组。\r\n\r\n```py [sol1-Python3]\r\nclass Solution:\r\n    def zeroFilledSubarray(self, nums: List[int]) -> int:\r\n        ans = c = 0\r\n        for x in nums:\r\n            if x:\r\n                c = 0\r\n            else:\r\n                c += 1\r\n                ans += c\r\n        return ans\r\n```\r\n\r\n```java [sol1-Java]\r\nclass Solution {\r\n    public long zeroFilledSubarray(int[] nums) {\r\n        var ans = 0L;\r\n        var c = 0;\r\n        for (var num : nums)\r\n            if (num != 0) c = 0;\r\n            else ans += ++c;\r\n        return ans;\r\n    }\r\n}\r\n```\r\n\r\n```cpp [sol1-C++]\r\nclass Solution {\r\npublic:\r\n    long long zeroFilledSubarray(vector<int> &nums) {\r\n        long ans = 0L;\r\n        int c = 0;\r\n        for (int num : nums)\r\n            if (num) c = 0;\r\n            else ans += ++c;\r\n        return ans;\r\n    }\r\n};\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc zeroFilledSubarray(nums []int) (ans int64) {\r\n\tc := 0\r\n\tfor _, num := range nums {\r\n\t\tif num == 0 {\r\n\t\t\tc++\r\n\t\t\tans += int64(c)\r\n\t\t} else {\r\n\t\t\tc = 0\r\n\t\t}\r\n\t}\r\n\treturn\r\n}\r\n```"
}