{
	"titleSlug": "sum-of-scores-of-built-strings",
	"slug": "on-kuo-zhan-kmp-by-endlesscheng-9nhs",
	"url": "https://leetcode-cn.com/problems/sum-of-scores-of-built-strings/solution/on-kuo-zhan-kmp-by-endlesscheng-9nhs/",
	"content": "题目求的就是扩展 KMP（Z 数组）的所有元素之和。\r\n\r\n指路 -> https://oi-wiki.org/string/z-func/\r\n\r\n```Python [sol1-Python3]\r\nclass Solution:\r\n    def sumScores(self, s: str) -> int:\r\n        n = len(s)\r\n        z = [0] * n\r\n        ans, l, r = n, 0, 0\r\n        for i in range(1, n):\r\n            z[i] = max(min(z[i - l], r - i + 1), 0)  # 注：不用 min max，拆开用 < > 比较会更快（仅限于 Python）\r\n            while i + z[i] < n and s[z[i]] == s[i + z[i]]:\r\n                l, r = i, i + z[i]\r\n                z[i] += 1\r\n            ans += z[i]\r\n        return ans\r\n```\r\n\r\n```java [sol1-Java]\r\nclass Solution {\r\n    public long sumScores(String s) {\r\n        var n = s.length();\r\n        var z = new int[n];\r\n        long ans = n;\r\n        for (int i = 1, l = 0, r = 0; i < n; i++) {\r\n            z[i] = Math.max(Math.min(z[i - l], r - i + 1), 0);\r\n            while (i + z[i] < n && s.charAt(z[i]) == s.charAt(i + z[i])) {\r\n                l = i;\r\n                r = i + z[i];\r\n                z[i]++;\r\n            }\r\n            ans += z[i];\r\n        }\r\n        return ans;\r\n    }\r\n}\r\n```\r\n\r\n```cpp [sol1-C++]\r\nclass Solution {\r\npublic:\r\n    long long sumScores(string s) {\r\n        int n = s.length();\r\n        long ans = n;\r\n        vector<int> z(n);\r\n        for (int i = 1, l = 0, r = 0; i < n; ++i) {\r\n            z[i] = max(min(z[i - l], r - i + 1), 0);\r\n            while (i + z[i] < n && s[z[i]] == s[i + z[i]]) {\r\n                l = i;\r\n                r = i + z[i];\r\n                ++z[i];\r\n            }\r\n            ans += z[i];\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc sumScores(s string) int64 {\r\n\tn := len(s)\r\n\tz := make([]int, n)\r\n\tans := n\r\n\tfor i, l, r := 1, 0, 0; i < n; i++ {\r\n\t\tz[i] = max(min(z[i-l], r-i+1), 0)\r\n\t\tfor i+z[i] < n && s[z[i]] == s[i+z[i]] {\r\n\t\t\tl, r = i, i+z[i]\r\n\t\t\tz[i]++\r\n\t\t}\r\n\t\tans += z[i]\r\n\t}\r\n\treturn int64(ans)\r\n}\r\n\r\nfunc min(a, b int) int { if a > b { return b }; return a }\r\nfunc max(a, b int) int { if a < b { return b }; return a }\r\n```\r\n\r\n"
}