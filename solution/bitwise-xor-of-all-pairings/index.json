{
	"titleSlug": "bitwise-xor-of-all-pairings",
	"slug": "cjavapython3c-wei-yun-suan-cong-bao-li-y-v8ug",
	"url": "https://leetcode-cn.com/problems/bitwise-xor-of-all-pairings/solution/cjavapython3c-wei-yun-suan-cong-bao-li-y-v8ug/",
	"content": "#### 题意分析\r\n\r\n------\r\n\r\n对于给定的两个数字，返回其所有数对的异或之和\r\n\r\n面对位运算的题目，我们不要慌，把运算过程写出来，答案自然就在眼前\r\n\r\n下面以`nums1:[a,b]`, `nums2:[c,d,e]`, `m=len(nums1)`, `n=len(nums2)`举例\r\n\r\n#### 思路分析\r\n\r\n-----\r\n\r\n1. 对于此题目的暴力解法为\r\n\r\n   `ans = (a ^ c) ^ (a ^ d) ^ (a ^ e) ^ (b ^ c) ^ (b ^ d) ^ (b ^ e)`\r\n\r\n   a,b为nums1元素，c,d,e为nums2元素\r\n\r\n 2. 根据交换律可知，原式可变为 ***（这里是最重要的）***\r\n\r\n    `ans = (a ^ a ^ a) ^ (b ^  b ^ b) ^ (c ^ c) ^ (d ^ d) ^ (e ^ e)`\r\n\r\n    由**异或操作，相同为0，不同为1**可得`(a ^ a ^ a) = a`, `(c ^ c）= 0` （注意a 和 c分别属于哪个数组）\r\n\r\n 3. `a`属于`nums1`，而式子中`a`的数量取决于`len(nums2)`；同理`c`的数量取决于`len(nums1)`\r\n\r\n    由此我们按照如下思路得出结论\r\n\r\n    + 计算出`nums1`, `nums2`数组的异或和\r\n    + 若`len(nums2) % 2 == 0`则`nums1`数组的`n`个异或和为0，否则为1\r\n    + `nums2`同理\r\n\r\n 4. 根据以上思路即可得出答案\r\n\r\n\r\n#### 参考代码\r\n\r\n-----\r\n\r\n```C++ []\r\n#define sz(a) a.size()\r\n\r\nclass Solution {\r\npublic:\r\n    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {\r\n        int a=0,b=0,m=sz(nums1),n=sz(nums2);\r\n        //计算出`nums1`, `nums2`数组的异或和\r\n        for(int &v:nums2)b^=v;\r\n        for(int &v:nums1)a^=v;\r\n        //若`len(nums2) % 2 == 0`则`nums1`数组的`n`个异或和为0，否则为1，`nums2`同理\r\n        if(n%2==0)a=0;\r\n        if(m%2==0)b=0;\r\n        //答案\r\n        return a^b;\r\n    }\r\n};\r\n```\r\n\r\n```Java []\r\nclass Solution {\r\n    public int xorAllNums(int[] nums1, int[] nums2) {\r\n        int a=0,b=0,m=nums1.length,n=nums2.length;\r\n        //计算出`nums1`, `nums2`数组的异或和\r\n        for(int v:nums2)b^=v;\r\n        for(int v:nums1)a^=v;\r\n        //若`len(nums2) % 2 == 0`则`nums1`数组的`n`个异或和为0，否则为1，`nums2`同理\r\n        if(n%2==0)a=0;\r\n        if(m%2==0)b=0;\r\n        //答案\r\n        return a^b;\r\n    }\r\n}\r\n```\r\n\r\n```Python3 []\r\nclass Solution:\r\n    def xorAllNums(self, nums1: List[int], nums2: List[int]) -> int:\r\n        a,b,m,n=0,0,len(nums1),len(nums2);\r\n        # 计算出`nums1`, `nums2`数组的异或和\r\n        for v in nums2:b^=v;\r\n        for v in nums1:a^=v;\r\n        # 若`len(nums2) % 2 == 0`则`nums1`数组的`n`个异或和为0，否则为1，`nums2`同理\r\n        if n%2==0:a=0;\r\n        if m%2==0:b=0;\r\n        # 答案\r\n        return a^b;\r\n```\r\n\r\n```C# []\r\npublic class Solution {\r\n    public int XorAllNums(int[] nums1, int[] nums2) {\r\n        int a=0,b=0,m=nums1.Length,n=nums2.Length;\r\n        //计算出`nums1`, `nums2`数组的异或和\r\n        for(int i=0; i<n; ++i)b^=nums2[i];\r\n        for(int i=0; i<m; ++i)a^=nums1[i];\r\n        //若`len(nums2) % 2 == 0`则`nums1`数组的`n`个异或和为0，否则为1，`nums2`同理\r\n        if(n%2==0)a=0;\r\n        if(m%2==0)b=0;\r\n        //答案\r\n        return a^b;\r\n    }\r\n}\r\n```\r\n\r\n"
}