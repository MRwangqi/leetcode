{
	"titleSlug": "4xy4Wx",
	"slug": "shuang-zhi-zhen-cai-gou-fang-an-by-demig-1jrv",
	"url": "https://leetcode-cn.com/problems/4xy4Wx/solution/shuang-zhi-zhen-cai-gou-fang-an-by-demig-1jrv/",
	"content": "![图解每日一练.jpg](https://pic.leetcode-cn.com/1615817903-fzmpwZ-%E5%9B%BE%E8%A7%A3%E6%AF%8F%E6%97%A5%E4%B8%80%E7%BB%83.jpg)\n\n---\n\n### 🧠 解题思路\n\n通过分析题意，我们得知其需求很简单，就是在 $nums$ 中找到两个数 $a$ 和 $b$，并且让其满足 $a + b <= target$ 即可！\n\n首先，如果通过双 $for$ 暴破，很显然，会超时的......，别问我怎么知道的哈！！\n\n咳，咳咳...，言归正传，先整个例子便于讲解：\n\n```js\nnums：[2，2，1，9]     target: 10\n```\n\n首先，获取两个数，求和之后再和某个数做比较，这个题其实和 [剑指 Offer 57. 和为s的两个数字](https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/solution/shuang-zhi-zhen-he-wei-sde-liang-ge-shu-wy7r4/) 极为相似，不知道的小伙伴可以先行看看这道题熟悉一下思路。\n\n首先，为了便于计算，我们先对 $nums$ 做升序排序。\n\n```js\nnums：[1，2，2，9]     target: 10\n```\n\n然后，创建一个指针 $i$ 指针指向 $nums$ 首位，再创建一个指针 $j$ 指向 $nums$ 末位，然后通过遍历，找到符合 $nums[i] + nums[j] <= target$ 条件的 $i$，$j$ 区间范围。\n\n既然该范围的边界值之和都满足了条件，那么代表该区间内的所有数字和 $nums[i]$ 相加都满足条件，所以，我们可以通过 $j - i$ 来获取到当前有多少个数，可以和 $nums[i]$ 相加后满足条件！\n\n```js\ni：0    j：3    nums[0] + nums[3] = 10，满足条件 <= 10\n\n所以，当 i = 0 时，存在 j - i = 3 种方案，即：[0,1],[0,2],[0,3]\n\n------------------------------------------------------------\n\n然后 i 指针右移一位，如下所示：\n\ni：1    j：3    nums[1] + nums[3] = 11，不满足条件 <= 10\n\n------------------------------------------------------------\n\n所以 j 指针左移一位，如下所示：\n\ni：1    j：2    nums[1] + nums[2] = 4，满足条件 <= 10\n\n------------------------------------------------------------\n\n所以，当 i = 1 时，存在 j - i = 1 种方案，即：[1,2]\n\n最后，满足条件的方案总共就是 [0,1],[0,2],[0,3],[1,2] 这 4 种方案！\n```\n\n最后，就可以愉快的开整了！！\n\n---\n\n### 🎨 图解演示\n\n<![1.jpg](https://pic.leetcode-cn.com/1617637284-evGZZy-1.jpg),![2.jpg](https://pic.leetcode-cn.com/1617637286-JWmhtm-2.jpg),![3.jpg](https://pic.leetcode-cn.com/1617637288-UVPawe-3.jpg),![4.jpg](https://pic.leetcode-cn.com/1617637291-nAFQsZ-4.jpg),![5.jpg](https://pic.leetcode-cn.com/1617637293-OiDDSt-5.jpg),![6.jpg](https://pic.leetcode-cn.com/1617637295-tVRxER-6.jpg),![7.jpg](https://pic.leetcode-cn.com/1617637297-PMRfOg-7.jpg),![8.jpg](https://pic.leetcode-cn.com/1617637299-NqIPos-8.jpg),![9.jpg](https://pic.leetcode-cn.com/1617637302-UUSLnp-9.jpg)>\n\n---\n\n### 🍭 示例代码\n\n```Javascript []\nvar purchasePlans = function(nums, target) {\n    let i = 0, j = nums.length - 1, ans = 0;\n    nums.sort((a, b) => a - b);\n    while(i < j){\n        if(nums[i] + nums[j] > target) j--;\n        else {\n            ans += j - i;\n            i++;\n        }\n    }\n    return ans % 1000000007;\n};\n```\n```Java []\nclass Solution {\n    public int purchasePlans(int[] nums, int target) {\n        int mod = 1_000_000_007;\n        int ans = 0;\n        Arrays.sort(nums);\n        int left = 0, right = nums.length - 1;\n        while (left < right) {\n            if (nums[left] + nums[right] > target) right--;\n            else {\n                ans += right - left;\n                left++;\n            }\n            ans %= mod;\n        }\n        return ans % mod;\n    }\n}\n```\n```C++ []\nclass Solution {\npublic:\n    int purchasePlans(vector<int>& nums, int target) {\n        long long res = 0;\n        long long mod = 1000000007;\n        sort(nums.begin(),nums.end());\n        int i=0,j = nums.size()-1;\n        for(i=0;i<j;i++)\n        {\n            while(j>i&&nums[i]+nums[j]>target)\n            {\n                j--;\n            }\n            res += j-i;\n        }\n        return res%mod;\n    }\n};\n```\n```C []\nint comp(const void* a,const void* b){\n    return *(int*)a - *(int*)b;\n}\nint purchasePlans(int* nums, int numsSize, int target){\n    long long sum = 0;\n    qsort(nums,numsSize,sizeof(int),comp);\n    unsigned left = 0,right = numsSize - 1;\n    while(left < right){\n        if((nums[left] + nums[right]) > target){\n            right--;\n        }\n        else{\n            sum += right - left;\n            left++;\n        }\n    }\n    return sum%(1000000007);\n}\n```\n```Golang []\nfunc purchasePlans(nums []int, target int) int {\n\tsort.Ints(nums)\n\tj := len(nums) - 1\n\tans := 0\n\tfor i := 0; i < len(nums); i++ {\n\t\tfor ; j > i; j-- {\n\t\t\tif nums[i]+nums[j] <= target {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif j > i {\n\t\t\tans = ans + (j - i)\n\t\t}\n\t}\n\treturn ans % 1000000007\n}\n```\n```Python3 []\nclass Solution:\n    def purchasePlans(self, nums: List[int], target: int) -> int:\n        nums.sort()\n        ans = 0\n        i = 0\n        j = len(nums)-1\n        while i < j:\n            if nums[i] + nums[j] > target:\n                j -= 1\n            else:\n                ans += (j-i)\n                i += 1\n        if ans<=1000000007:\n            return ans\n        else:\n            return ans%1000000007\n```\n\n---\n\n### 转身挥手\n\n嘿，少年，做图不易，留下个赞或评论再走吧！谢啦~ 💐\n\n差点忘了，祝你牛年大吉 🐮 ，AC 和 Offer 📑 多多益善~\n\n⛲⛲⛲ 期待下次再见~ "
}