{
	"titleSlug": "stream-of-characters",
	"slug": "python-zi-dian-shu-by-qin-qi-shu-hua-2-j0vf",
	"url": "https://leetcode-cn.com/problems/stream-of-characters/solution/python-zi-dian-shu-by-qin-qi-shu-hua-2-j0vf/",
	"content": "1、构建字典树\n2、在字符流过程中构建列表，不断存储新的字典树，直至字符流在字典树中不再出现。\n3、在字典树列表中，如果存在结束标记则返回true，否则false\n```\nclass StreamChecker:\n\n    def __init__(self, words: List[str]):\n        self.tree = {}#字典树\n        self.s = []#字典树列表\n        for word in words:\n            tmp = self.tree\n            for l in word:\n                if l not in tmp:\n                    tmp[l] = {}\n                tmp = tmp[l]\n            tmp[\"label\"] = True\n\n\n    def query(self, letter: str) -> bool:\n        res = False\n        s = []\n        for d in [self.tree] + self.s:#遍历字典树列表\n            if letter in d:#如果存在\n                d = d[letter]\n                if \"label\" in d:#判断结束标记\n                    res = True\n                s.append(d)#将新的字典树加入列表\n        self.s = s\n        return res\n\n\n\n# Your StreamChecker object will be instantiated and called as such:\n# obj = StreamChecker(words)\n# param_1 = obj.query(letter)\n```\n"
}