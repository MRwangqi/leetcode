{
	"titleSlug": "05ZEDJ",
	"slug": "by-jsjohnsonjs-fsmg",
	"url": "https://leetcode-cn.com/problems/05ZEDJ/solution/by-jsjohnsonjs-fsmg/",
	"content": "### 解题思路\nSimulate，and求解一元一次方程\n\n### 代码\n\n```java\nclass Solution {\n    public int[] volunteerDeployment(int[] finalCnt, long totalNum, int[][] edges, int[][] plans) {\n        int n = finalCnt.length + 1, m = plans.length;\n        int[] oriParam = new int[n];\n        int[] oriCnt = new int[n];\n        oriParam[0] = 1;\n        for (int i = 0; i < n - 1; i++) {\n            oriCnt[i + 1] = finalCnt[i];\n        }\n        HashMap<Integer, List<Integer>> related = new HashMap<>();\n        for (int[] e : edges) {\n            addRelations(e[0], e[1], related);\n            addRelations(e[1], e[0], related);\n        }\n        for (int i = m - 1; i >= 0; i--) {\n            int idx = plans[i][1];\n            int num = plans[i][0];\n            operate(num, idx, oriParam, related);\n            operate(num, idx, oriCnt, related);\n        }\n        int param = 0;\n        for (int i = 0; i < n; i++) {\n            totalNum -= oriCnt[i];\n            param += oriParam[i];\n        }\n        int x = (int)(totalNum / param);\n        for (int i = 0; i < n; i++) {\n            oriCnt[i] += oriParam[i] * x;\n        }\n        return oriCnt;\n    }\n\n    private void operate(int num, int idx, int[] array, HashMap<Integer, List<Integer>> related) {\n        if (num == 1) {\n            array[idx] *= 2;\n        } else {\n            for (int r : related.getOrDefault(idx, new ArrayList<>())) {\n                if (num == 2) {\n                    array[r] -= array[idx];\n                } else {\n                    array[r] += array[idx];\n                }\n            }\n        }\n    }\n\n    private void addRelations(int x, int y, HashMap<Integer, List<Integer>> related) {\n        List<Integer> relations = related.getOrDefault(x, new ArrayList<>());\n        relations.add(y);\n        related.put(x, relations);\n    }\n}\n```"
}