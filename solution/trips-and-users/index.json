{
	"titleSlug": "trips-and-users",
	"slug": "san-chong-jie-fa-cong-nan-dao-yi-zong-you-gua-he-n",
	"url": "https://leetcode-cn.com/problems/trips-and-users/solution/san-chong-jie-fa-cong-nan-dao-yi-zong-you-gua-he-n/",
	"content": "统计每天非禁止用户的取消率，需要知道非禁止用户有哪些，总行程数，取消的行程数。\r\n\r\n### 解法一\r\n首先确定被禁止用户的行程记录，再剔除这些行程记录。\r\n\r\n行程表中，字段 client_id 和 driver_id，都与用户表中的 users_id 关联。因此只要 client_id 和 driver_id 中有一个被禁止了，此条行程记录要被剔除。\r\n\r\n先说一种错误的找出没被禁止用户行程记录的方法。此方法很有迷惑性。\r\n\r\n思路：\r\n```\r\nif (client_id = users_id 或 driver_id = users_id) 且 users_id没有被禁止\r\n{\r\n    此条记录没被禁止。\r\n}\r\n```\r\nSQL 代码\r\n```\r\nSELECT *\r\nFROM Trips AS T JOIN Users AS U \r\nON (T.client_id = U.users_id  OR T.driver_id = U.users_id )  AND U.banned ='No'\r\n```\r\n乍一看，思路是对。其实是错误的。因为，我们不知觉得肯定了一个假设—— client_id 与 driver_id 是相同的。只有当两者相同时，才能用此条件排除被禁止用户的行程记录。\r\n\r\n错误的结果：\r\n```\r\n+------+-----------+-----------+---------+---------------------+------------+----------+--------+--------+\r\n| Id   | Client_Id | Driver_Id | City_Id | STATUS              | Request_at | Users_Id | Banned | Role   |\r\n+------+-----------+-----------+---------+---------------------+------------+----------+--------+--------+\r\n|    1 |         1 |        10 |       1 | completed           | 2013-10-01 |        1 | No     | client |\r\n|    1 |         1 |        10 |       1 | completed           | 2013-10-01 |       10 | No     | driver |\r\n|    2 |         2 |        11 |       1 | cancelled_by_driver | 2013-10-01 |       11 | No     | driver |\r\n|    3 |         3 |        12 |       6 | completed           | 2013-10-01 |        3 | No     | client |\r\n|    3 |         3 |        12 |       6 | completed           | 2013-10-01 |       12 | No     | driver |\r\n|    4 |         4 |        13 |       6 | cancelled_by_client | 2013-10-01 |        4 | No     | client |\r\n|    4 |         4 |        13 |       6 | cancelled_by_client | 2013-10-01 |       13 | No     | driver |\r\n|    5 |         1 |        10 |       1 | completed           | 2013-10-02 |        1 | No     | client |\r\n|    5 |         1 |        10 |       1 | completed           | 2013-10-02 |       10 | No     | driver |\r\n|    6 |         2 |        11 |       6 | completed           | 2013-10-02 |       11 | No     | driver |\r\n|    7 |         3 |        12 |       6 | completed           | 2013-10-02 |        3 | No     | client |\r\n|    7 |         3 |        12 |       6 | completed           | 2013-10-02 |       12 | No     | driver |\r\n|    8 |         2 |        12 |      12 | completed           | 2013-10-03 |       12 | No     | driver |\r\n|    9 |         3 |        10 |      12 | completed           | 2013-10-03 |        3 | No     | client |\r\n|    9 |         3 |        10 |      12 | completed           | 2013-10-03 |       10 | No     | driver |\r\n|   10 |         4 |        13 |      12 | cancelled_by_driver | 2013-10-03 |        4 | No     | client |\r\n|   10 |         4 |        13 |      12 | cancelled_by_driver | 2013-10-03 |       13 | No     | driver |\r\n+------+-----------+-----------+---------+---------------------+------------+----------+--------+--------+\r\n```\r\n结果中，被禁止的 users_id = 2，其行程记录没被剔除掉。\r\n\r\n明显， client_id 与 driver_id 不一定相同 。\r\n\r\n正确的做法是对 client_id 和 driver_id 各自关联的 users_id，同时检测是否被禁止。\r\n```\r\nif (client_id = users_id_1 且 users_id_1没被禁止 并且 client_id = users_id_2 且 users_id_2没被禁止){\r\n    此条记录没被禁止。\r\n}\r\n```\r\nSQL 代码：\r\n```\r\nSELECT *\r\nFROM Trips AS T\r\nJOIN Users AS U1 ON (T.client_id = U1.users_id AND U1.banned ='No')\r\nJOIN Users AS U2 ON (T.driver_id = U2.users_id AND U2.banned ='No')\r\n```\r\n在此基础上，按日期分组，统计每组的 总行程数，取消的行程数 。\r\n\r\n每组的总行程数：COUNT(T.STATUS)。\r\n\r\n每组的取消的行程数：\r\n```\r\nSUM(\r\n\tIF(T.STATUS = 'completed',0,1)\r\n)\r\n```\r\n取消率 = 每组的取消的行程数 / 每组的总行程数\r\n\r\n完整逻辑为:\r\n```\r\nSELECT T.request_at AS `Day`, \r\n\tROUND(\r\n\t\t\tSUM(\r\n\t\t\t\tIF(T.STATUS = 'completed',0,1)\r\n\t\t\t)\r\n\t\t\t/ \r\n\t\t\tCOUNT(T.STATUS),\r\n\t\t\t2\r\n\t) AS `Cancellation Rate`\r\nFROM Trips AS T\r\nJOIN Users AS U1 ON (T.client_id = U1.users_id AND U1.banned ='No')\r\nJOIN Users AS U2 ON (T.driver_id = U2.users_id AND U2.banned ='No')\r\nWHERE T.request_at BETWEEN '2013-10-01' AND '2013-10-03'\r\nGROUP BY T.request_at\r\n```\r\n其中 SUM 求和函数，COUNT 计数函数，ROUND 四舍五入函数。\r\n\r\n### 解法二\r\n思路与解法一相同。而采用不同的方法排除掉被禁止用户的行程记录。想到排除，就联想到集合差。\r\n\r\nclient_id 和 driver_id 的全部为集合 U。被禁止的 users_id 集合为 A。\r\n\r\nU 减去 A 的结果为没被禁止的用户。\r\n```\r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A\r\n```\r\n好了，先演示一个错误的解法：\r\n\r\n行程表连接表 A，排除掉被被禁止的行程。\r\n```\r\nSELECT *\r\nFROM trips AS T,\r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A\r\nWHERE (T.Client_Id != A.users_id AND T.Driver_Id != A.users_id)\r\n```\r\n剩下的逻辑与解法一后部分相同，完善后的逻辑为：\r\n```\r\nSELECT T.request_at AS `Day`, \r\n\tROUND(\r\n\t\t\tSUM(\r\n\t\t\t\tIF(T.STATUS = 'completed',0,1)\r\n\t\t\t)\r\n\t\t\t/ \r\n\t\t\tCOUNT(T.STATUS),\r\n\t\t\t2\r\n\t) AS `Cancellation Rate`\r\nFROM trips AS T,\r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A\r\nWHERE (T.Client_Id != A.users_id AND T.Driver_Id != A.users_id) AND T.request_at BETWEEN '2013-10-01' AND '2013-10-03'\r\nGROUP BY T.request_at\r\n```\r\n很可惜，当表 A 为空时，此方法的结果是空表。但是表 A 为空，可能是有用户但是没有被禁止的用户。因此方法是错误的。\r\n\r\n正确的解法是：行程表 left join 表 A 两次，A.users_id 都为 NULL 的行都是没被排除的行。\r\n```\r\nSELECT *\r\nFROM trips AS T LEFT JOIN \r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A ON (T.Client_Id = A.users_id)\r\nLEFT JOIN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A1\r\nON (T.Driver_Id = A1.users_id)\r\nWHERE A.users_id IS NULL AND A1.users_id IS NULL\r\n```\r\n补上其它部分的逻辑为：\r\n```\r\nSELECT T.request_at AS `Day`, \r\n\tROUND(\r\n\t\t\tSUM(\r\n\t\t\t\tIF(T.STATUS = 'completed',0,1)\r\n\t\t\t)\r\n\t\t\t/ \r\n\t\t\tCOUNT(T.STATUS),\r\n\t\t\t2\r\n\t) AS `Cancellation Rate`\r\nFROM trips AS T LEFT JOIN \r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A ON (T.Client_Id = A.users_id)\r\nLEFT JOIN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n) AS A1\r\nON (T.Driver_Id = A1.users_id)\r\nWHERE A.users_id IS NULL AND A1.users_id IS NULL AND T.request_at BETWEEN '2013-10-01' AND '2013-10-03'\r\nGROUP BY T.request_at\r\n```\r\n### 解法三\r\n与解法二思路相同。找出被禁止的用户后，不再连接行程表和用户表，直接从行程表中排除掉被被禁止用户的行程记录。\r\n\r\n被禁止的用户用子查询：\r\n```\r\n(\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n)\r\n```\r\n行程表中 client_id 和 driver_id 都在此子查询结果中的行要剔除掉。\r\n```\r\nSELECT *\r\nFROM trips AS T\r\nWHERE \r\nT.Client_Id NOT IN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n)\r\nAND\r\nT.Driver_Id NOT IN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n)\r\n```\r\n补上其它部分：\r\n```\r\nSELECT T.request_at AS `Day`, \r\n\tROUND(\r\n\t\t\tSUM(\r\n\t\t\t\tIF(T.STATUS = 'completed',0,1)\r\n\t\t\t)\r\n\t\t\t/ \r\n\t\t\tCOUNT(T.STATUS),\r\n\t\t\t2\r\n\t) AS `Cancellation Rate`\r\nFROM trips AS T\r\nWHERE \r\nT.Client_Id NOT IN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n)\r\nAND\r\nT.Driver_Id NOT IN (\r\n\tSELECT users_id\r\n\tFROM users\r\n\tWHERE banned = 'Yes'\r\n)\r\nAND T.request_at BETWEEN '2013-10-01' AND '2013-10-03'\r\nGROUP BY T.request_at\r\n```\r\n"
}