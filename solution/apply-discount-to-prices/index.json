{
	"titleSlug": "apply-discount-to-prices",
	"slug": "c-by-mfk443838746-28qy",
	"url": "https://leetcode-cn.com/problems/apply-discount-to-prices/solution/c-by-mfk443838746-28qy/",
	"content": "首先用 istringstream 输入流 与 `getline(iss, t, ' ')` 获取由空格分隔的每个单词，然后判断该单词是否是一个“价格单词”。（也可以直接 `while (iss >> t)`，默认就是以空格作为分隔符）\r\n\r\n至于保留小数点后两位的问题，可以用 ostringstream 较方便地解决（另外 istringstream 与 ostringstream 也都可以直接写作 stringstream）：\r\n```\r\nostringstream oss;\r\noss << fixed << setprecision(2) << price;\r\n\r\noss.str();\r\n```\r\n\r\n```\r\nclass Solution {\r\npublic:\r\n    string discountPrices(string sentence, int discount) {\r\n        string res;\r\n        istringstream iss(sentence);\r\n        string t;\r\n        while (getline(iss, t, ' ')) { // while (iss >> t)\r\n            bool isPrice = (t.size() > 1 && t[0] == '$');\r\n            if (isPrice) {\r\n                for (int i = 1; i < t.size(); ++i) {\r\n                    if (t[i] == '$' || t[i] < '0' || t[i] > '9') {\r\n                        isPrice = 0; break;\r\n                    }\r\n                }\r\n            }\r\n            if (isPrice) {\r\n                string p = t.substr(1);\r\n                double price = stod(p);\r\n                price *= (100 - discount) * 0.01;\r\n                \r\n                ostringstream oss;\r\n                oss << fixed << setprecision(2) << price;\r\n                \r\n                res += '$' + oss.str() + ' ';\r\n            } else {\r\n                res += t + ' ';\r\n            }\r\n        }\r\n        res.pop_back();\r\n        return res;\r\n    }\r\n};\r\n```\r\n"
}