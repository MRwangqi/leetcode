{
	"titleSlug": "check-if-word-equals-summation-of-two-words",
	"slug": "jian-cha-mou-dan-ci-shi-fou-deng-yu-lian-3f75",
	"url": "https://leetcode-cn.com/problems/check-if-word-equals-summation-of-two-words/solution/jian-cha-mou-dan-ci-shi-fou-deng-yu-lian-3f75/",
	"content": "#### 方法一：按要求处理\n\n**思路与算法**\n\n我们用函数 $\\textit{decode}(s)$ 将单词转化为对应的整数。我们将 $\\textit{res}$ 的初始值设为 $0$，在从前至后处理每个字符 $s[i]$ 时，我们需要将 $\\textit{res}$ 乘 $10$ 并加上 $s[i]$ 对应的数值。最终，我们返回 $\\textit{res}$ 作为转化后的整数。\n\n最终，我们比较 $\\textit{decode}(\\textit{firstWord})$ 与 $\\textit{decode}(\\textit{secondWord})$ 的和是否等于 $\\textit{decode}(\\textit{targetWord})$ 即可。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    bool isSumEqual(string firstWord, string secondWord, string targetWord) {\n        auto decode = [](const string& s) -> int {\n            int res = 0;\n            for (char ch: s){\n                res *= 10;\n                res += ch - 'a';\n            }\n            return res;\n        };\n        \n        return decode(firstWord) + decode(secondWord) == decode(targetWord);\n    }\n};\n```\n\n\n```Python [sol1-Python3]\nclass Solution:\n    def isSumEqual(self, firstWord: str, secondWord: str, targetWord: str) -> bool:\n        def decode(word: str) -> int:\n            res = 0\n            for ch in word:\n                res *= 10\n                res += ord(ch) - ord('a')\n            return res\n        \n        return decode(firstWord) + decode(secondWord) == decode(targetWord)\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(n_1+n_2+n_3)$，其中 $n_1, n_2, n_3$ 分别为三个字符串的长度。我们需要分别遍历三个字符串并转为对应的整数。\n\n- 空间复杂度：$O(1)$。"
}