{
	"titleSlug": "maximum-score-from-removing-substrings",
	"slug": "o1-kong-jian-tan-xin-zuo-fa-by-arsenal-5-y6or",
	"url": "https://leetcode-cn.com/problems/maximum-score-from-removing-substrings/solution/o1-kong-jian-tan-xin-zuo-fa-by-arsenal-5-y6or/",
	"content": "#### 方法一：贪心\r\n\r\n首先，不妨假设 $\"ab\"$ 的得分总是不低于 $\"ba\"$；否则，我们将字符串中的字符 $a$ 换成 $b$，$b$ 换成 $a$，再交换 $x$ 和 $y$ 即可。\r\n\r\n随后，我们也只需考虑字符串中只包含 $a,b$ 的情形。如果字符串中含有其他的字符，就以该字符为分隔，分别考虑左右两个字符串即可。\r\n\r\n注意到：对于一个只包含 $a,b$ 的字符串而言，无论采取怎样的方案进行消除，最后一定只剩下一种字符（或者为空字符串）；而由于每次消除操作都同等地将 $a,b$ 的出现次数减 $1$，因此总的消除操作数量也是固定的。既然消除操作的数量是固定值，那么最优的策略一定是：尽可能地多消除 $ab$。\r\n\r\n因此，我们维护两个计数器 $c_a, c_b$，分别代表着 $a,b$ 两种字符**剩余的数目**。\r\n\r\n- 如果当前字符为 $a$，由于贪心策略要求多消除 $ab$，因此此时不消除该字符 $a$，而是将 $c_a$ 递增\r\n- 如果当前字符为 $b$，\r\n    - 如果 $c_a > 0$，说明此前有剩余的字符 $a$，因此我们利用这个 $a$ 消除当前的 $b$，于是将 $c_a$ 递减，并记录一次得分 $x$\r\n    - 如果 $c_a = 0$，说明没有剩余的字符 $a$ 了，此时我们无法将这个 $b$ 消除掉，于是将 $c_b$ 递增。\r\n\r\n最后，我们留下了 $c_a$ 个字符 $a$，$c_b$ 个字符 $b$。此时我们终于可以消除 $ba$ 了，消除的次数为 $\\min\\{c_a, c_b\\}$，故记录得分 $y\\cdot min\\{c_a, c_b\\}$.\r\n    \r\n``` C++ [sol1-C++]\r\nclass Solution {\r\npublic:\r\n    int maximumGain(string s, int x, int y) {\r\n        int n = s.length();\r\n        if (x < y) {\r\n            swap(x, y);\r\n            for (int i = 0; i < n; i++) {\r\n                if (s[i] == 'a') s[i] = 'b';\r\n                else if (s[i] == 'b') s[i] = 'a';\r\n            }\r\n        }\r\n\r\n        int ret = 0;\r\n        int i = 0;\r\n        while (i < n) {\r\n            while (i < n && s[i] != 'a' && s[i] != 'b') i++;\r\n            \r\n            int ca = 0, cb = 0;\r\n            while (i < n && (s[i] == 'a' || s[i] == 'b')) {\r\n                if (s[i] == 'a') {\r\n                    ca++;\r\n                } else {\r\n                    if (ca > 0) {\r\n                        ca--;\r\n                        ret += x;\r\n                    } else {\r\n                        cb++;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            \r\n            ret += min(ca, cb) * y;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n};\r\n```"
}