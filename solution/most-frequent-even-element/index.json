{
	"titleSlug": "most-frequent-even-element",
	"slug": "ha-xi-biao-tong-ji-by-endlesscheng-lfuh",
	"url": "https://leetcode-cn.com/problems/most-frequent-even-element/solution/ha-xi-biao-tong-ji-by-endlesscheng-lfuh/",
	"content": "本题 [视频讲解](https://www.bilibili.com/video/BV1it4y1L7kL) 已出炉，欢迎点赞三连，在评论区分享你对这场周赛的看法~\r\n \r\n```py [sol1-Python3]\r\nclass Solution:\r\n    def mostFrequentEven(self, nums: List[int]) -> int:\r\n        cnt = Counter(x for x in nums if x % 2 == 0)\r\n        if len(cnt) == 0: return -1\r\n        max_cnt = max(cnt.values())\r\n        return min(x for x, c in cnt.items() if c == max_cnt)\r\n```\r\n\r\n```java [sol1-Java]\r\nclass Solution {\r\n    public int mostFrequentEven(int[] nums) {\r\n        var cnt = new HashMap<Integer, Integer>();\r\n        for (var x : nums) if (x % 2 == 0) cnt.put(x, cnt.getOrDefault(x, 0) + 1);\r\n        if (cnt.isEmpty()) return -1;\r\n        var maxCnt = cnt.values().stream().max(Integer::compare).get();\r\n        return cnt.entrySet().stream().filter(e -> Objects.equals(e.getValue(), maxCnt)).min(Map.Entry.comparingByKey()).get().getKey();\r\n    }\r\n}\r\n```\r\n\r\n```go [sol1-Go]\r\nfunc mostFrequentEven(nums []int) int {\r\n\tcnt := map[int]int{}\r\n\tfor _, x := range nums {\r\n\t\tif x%2 == 0 {\r\n\t\t\tcnt[x]++\r\n\t\t}\r\n\t}\r\n\tif len(cnt) == 0 {\r\n\t\treturn -1\r\n\t}\r\n\tans := -1\r\n\tfor x, c := range cnt {\r\n\t\tif ans < 0 || c > cnt[ans] || c == cnt[ans] && x < ans {\r\n\t\t\tans = x\r\n\t\t}\r\n\t}\r\n\treturn ans\r\n}\r\n```\r\n"
}