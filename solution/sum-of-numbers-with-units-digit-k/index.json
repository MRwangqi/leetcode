{
	"titleSlug": "sum-of-numbers-with-units-digit-k",
	"slug": "ge-wei-shu-zi-wei-k-de-zheng-shu-zhi-he-c8nlx",
	"url": "https://leetcode-cn.com/problems/sum-of-numbers-with-units-digit-k/solution/ge-wei-shu-zi-wei-k-de-zheng-shu-zhi-he-c8nlx/",
	"content": "#### 方法一：枚举集合的大小\n\n**思路与算法**\n\n当 $\\textit{num} = 0$ 时，唯一的方法是选择一个空集合，答案为 $0$。\n\n当 $\\textit{num} > 0$ 时，我们可以发现最多不会选择超过 $10$ 个数。这是因为如果这些数的个位数字为 $k$，并且我们选择了至少 $11$ 个数，由于 $11k$ 的个位数字也为 $k$，那么我们可以把任意的 $11$ 个数合并成一个，使得选择的数仍然满足要求，并且集合更小。\n\n因此，我们可以枚举选择的数的个数 $i$。由于每个数最小为 $k$，那么这 $i$ 个数的和至少为 $i \\cdot k$。如果 $i \\cdot k > \\textit{num}$，那么无法满足要求，否则这 $i$ 个数的和的个位数字已经确定，即为 $i \\cdot k \\bmod 10$。我们需要保证其与 $\\textit{num}$ 的个位数字相同，这样 $\\textit{num} - i \\cdot k$ 就是 $10$ 的倍数，我们把多出的部分加在任意一个数字上，都不会改变它的个位数字。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    int minimumNumbers(int num, int k) {\n        if (num == 0) {\n            return 0;\n        }\n        for (int i = 1; i <= 10; ++i) {\n            if (k * i <= num && (num - k * i) % 10 == 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def minimumNumbers(self, num: int, k: int) -> int:\n        if num == 0:\n            return 0\n        \n        for i in range(1, 11):\n            if k * i <= num and (num - k * i) % 10 == 0:\n                return i\n        \n        return -1\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。"
}