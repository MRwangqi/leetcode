{
	"titleSlug": "smallest-index-with-equal-value",
	"slug": "zhi-xiang-deng-de-zui-xiao-suo-yin-by-le-0bbn",
	"url": "https://leetcode-cn.com/problems/smallest-index-with-equal-value/solution/zhi-xiang-deng-de-zui-xiao-suo-yin-by-le-0bbn/",
	"content": "#### 方法一：顺序遍历数组\n\n**思路与算法**\n\n我们可以**顺序遍历**数组 $\\textit{nums}$ 的下标 $i$，检查 $i \\bmod 10 = \\textit{nums}[i]$ 是否成立。\n\n如果成立，则该下标即为值相等的最小索引，我们返回该下标作为答案。若遍历完整个数组均未找到符合要求的下标，则返回 $-1$。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    int smallestEqual(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i){\n            if (i % 10 == nums[i]){\n                return i;\n            }\n        }\n        return -1;\n    }\n};\n```\n\n\n```Python [sol1-Python3]\nclass Solution:\n    def smallestEqual(self, nums: List[int]) -> int:\n        n = len(nums)\n        for i in range(n):\n            if i % 10 == nums[i]:\n                return i\n        return -1\n```\n\n\n**复杂度分析**\n\n- 时间复杂度：$O(n)$，其中 $n$ 为 $\\textit{nums}$ 的长度。即为遍历数组寻找符合要求的最小索引的时间复杂度。\n\n- 空间复杂度：$O(1)$。"
}