{
	"titleSlug": "transpose-file",
	"slug": "leetcodejie-ti-xi-lie-194-zhuan-zhi-wen-u4r72",
	"url": "https://leetcode-cn.com/problems/transpose-file/solution/leetcodejie-ti-xi-lie-194-zhuan-zhi-wen-u4r72/",
	"content": "### 解题思路\n## 分析\n文件内容为2行3列，每行列数相同，字段由 `' ' ` 分隔，需要将第一列转为第一行，第二列转为第二行。\n\n## xargs 多行变单行\n很容易就想到了 `xargs` 这个命令，可以将单行或多行文本输入转换为其他格式，例如多行变单行，单行变多行。\n\n**举例：**\n```bash\ncat <<EOF>1.txt\n1\n2\n3\nEOF\ncat 1.txt | xargs\n```\n![在这里插入图片描述](https://pic.leetcode-cn.com/1627707506-Sduuyj-file_1627707506111)\n但是有个问题，如果有多列的情况下，输出只能按次序只能变成单行。也就是如下：\n![在这里插入图片描述](https://pic.leetcode-cn.com/1627707506-XSLqOG-file_1627707506114)\n无法达到需要的效果。所以得想办法依次取到每一列然后执行 `xargs` 输出。**如何取到第一列的数据呢？**\n\n## awk + print 打印列\n可以使用 `awk` 命令处理文本，配置 `print` 命令来获取指定列的数据：\n```bash\nawk '{print $1}' 1.txt\n```\n![在这里插入图片描述](https://pic.leetcode-cn.com/1627707506-fuTGFG-file_1627707506113)\n这样就达到了我们的要求，接下来只需要获取文本有多少列，然后循环输出即可。\n\n## head + wc 获取列数\n通过 `head -n` 命令可以获取文件指定行数的内容，再使用 `wc -w` 即可获取当前行的所有列数。由于本题每行列数相同，因此我们取第一行即可。\n```bash\ncat 1.txt | head -n 1 | wc -w\n```\n![在这里插入图片描述](https://pic.leetcode-cn.com/1627707506-WySqjg-file_1627707506102)\n获取每行的总列数为2列。接下来再写个循环来输出：\n```bash\ncolumns=$(cat 1.txt | head -n 1 | wc -w)\nfor i in $(seq 1 $columns)\ndo\nawk '{print $'''$i'''}' 1.txt | xargs\ndone\n```\n![在这里插入图片描述](https://pic.leetcode-cn.com/1627707506-kIQDnm-file_1627707506107)\n\n### 代码\n\n```bash\n# Read from the file file.txt and print its transposed content to stdout.\ncolumns=$(cat file.txt | head -n 1 | wc -w)\nfor i in $(seq 1 $columns)\ndo\nawk '{print $'''$i'''}' file.txt | xargs\ndone\n```"
}