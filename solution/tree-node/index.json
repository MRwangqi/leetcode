{
	"titleSlug": "tree-node",
	"slug": "shu-jie-dian-by-leetcode",
	"url": "https://leetcode-cn.com/problems/tree-node/solution/shu-jie-dian-by-leetcode/",
	"content": "#### 方法 1：使用 `UNION` [Accepted]\n\n**想法**\n\n我们可以按照下面的定义，求出每一条记录的节点类型。\n* Root: 没有父节点\n* Inner: 它是某些节点的父节点，且有非空的父节点\n* Leaf: 除了上述两种情况以外的节点\n\n**算法**\n\n将上述定义转化，我们可以得到下面的代码。\n\n根节点是没有父节点的节点。\n\n```sql []\nSELECT\n    id, 'Root' AS Type\nFROM\n    tree\nWHERE\n    p_id IS NULL\n```\n\n叶子节点是没有孩子节点的节点，且它有父亲节点。\n\n```sql []\nSELECT\n    id, 'Leaf' AS Type\nFROM\n    tree\nWHERE\n    id NOT IN (SELECT DISTINCT\n            p_id\n        FROM\n            tree\n        WHERE\n            p_id IS NOT NULL)\n        AND p_id IS NOT NULL\n```\n\n内部节点是有孩子节点和父节点的节点。\n\n```sql []\nSELECT\n    id, 'Inner' AS Type\nFROM\n    tree\nWHERE\n    id IN (SELECT DISTINCT\n            p_id\n        FROM\n            tree\n        WHERE\n            p_id IS NOT NULL)\n        AND p_id IS NOT NULL\n```\n\n所以本题的一种解法是将这些情况用 `UNION` 合并起来。\n\n```sql []\nSELECT\n    id, 'Root' AS Type\nFROM\n    tree\nWHERE\n    p_id IS NULL\n\nUNION\n\nSELECT\n    id, 'Leaf' AS Type\nFROM\n    tree\nWHERE\n    id NOT IN (SELECT DISTINCT\n            p_id\n        FROM\n            tree\n        WHERE\n            p_id IS NOT NULL)\n        AND p_id IS NOT NULL\n\nUNION\n\nSELECT\n    id, 'Inner' AS Type\nFROM\n    tree\nWHERE\n    id IN (SELECT DISTINCT\n            p_id\n        FROM\n            tree\n        WHERE\n            p_id IS NOT NULL)\n        AND p_id IS NOT NULL\nORDER BY id;\n```\n\n#### 方法 II：使用流控制语句 `CASE` [Accepted]\n\n**算法**\n\n与上面解法类似，本解法使用流控制语句，流控制语句对基于不同输入产生不同输出非常有效。本方法中，我们使用 [`CASE`](https://dev.mysql.com/doc/refman/5.7/en/case.html) 语句。\n\n```sql [-sql]\nSELECT\n    id AS `Id`,\n    CASE\n        WHEN tree.id = (SELECT atree.id FROM tree atree WHERE atree.p_id IS NULL)\n          THEN 'Root'\n        WHEN tree.id IN (SELECT atree.p_id FROM tree atree)\n          THEN 'Inner'\n        ELSE 'Leaf'\n    END AS Type\nFROM\n    tree\nORDER BY `Id`\n;\n```\n>MySQL 除了 `CASE` 语句以外还提供了不同的流控制语句。你可以尝试将上面的方法用 [`IF`](https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html#function_if) 重写。\n\n#### 方法 III；使用 `IF` 函数 [Accepted]\n\n**算法**\n\n我们还可以使用 [`IF`](https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html#function_if) 函数来避免复杂的流控制语句。\n\n```sql []\nSELECT\n    atree.id,\n    IF(ISNULL(atree.p_id),\n        'Root',\n        IF(atree.id IN (SELECT p_id FROM tree), 'Inner','Leaf')) Type\nFROM\n    tree atree\nORDER BY atree.id\n```\n\n>注意：此解法由 [@richarddia](https://discuss.leetcode.com/user/richarddia) 提出。\n"
}