{
	"titleSlug": "dinner-plate-stacks",
	"slug": "erxuchengmi-by-liupengsay-q6gt",
	"url": "https://leetcode-cn.com/problems/dinner-plate-stacks/solution/erxuchengmi-by-liupengsay-q6gt/",
	"content": "### 解题思路\nPython3+有序集合+哈希\n\n### 代码\n\n```python3\nfrom collections import defaultdict\nfrom sortedcontainers import SortedDict\n\n\nclass DinnerPlates:\n\n    def __init__(self, capacity: int):\n        self.capacity = capacity\n        self.stack = defaultdict(list)\n        self.left_not_full = SortedDict()\n        self.right_not_nan = SortedDict()\n\n    def push(self, val: int) -> None:\n        if not self.left_not_full:\n        # 注意defaulteddict访问会创造键\n            self.left_not_full[len(self.stack)] = 1\n        index = self.left_not_full.peekitem(0)[0]\n        self.stack[index].append(val)\n        self.right_not_nan[index] = 1\n        if len(self.stack[index]) == self.capacity:\n            self.left_not_full.popitem(0)\n        return\n\n    def pop(self) -> int:\n        if not self.right_not_nan:\n            return -1\n        index = self.right_not_nan.peekitem(-1)[0]\n        value = self.stack[index].pop(-1)\n        if not self.stack[index]:\n            self.right_not_nan.popitem(-1)\n        self.left_not_full[index] = 1\n        return value\n\n\n    def popAtStack(self, index: int) -> int:\n        # 注意defaulteddict访问会创造键\n        if index not in self.stack or not self.stack[index]:\n            return -1\n        value = self.stack[index].pop(-1)\n        if not self.stack[index]:\n            del self.right_not_nan[index]\n        self.left_not_full[index] = 1\n        return value\n\n\n# Your DinnerPlates object will be instantiated and called as such:\n# obj = DinnerPlates(capacity)\n# obj.push(val)\n# param_2 = obj.pop()\n# param_3 = obj.popAtStack(index)\n```"
}